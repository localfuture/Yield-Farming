{"id":"ccfa3d5b70b760ed130d5a5829f6638a","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/YieldFarming.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract YieldFarming is ERC20 {\r\n    address public owner;\r\n    uint whaleThreshold = 10000 wei;\r\n    address[] whales;\r\n    mapping(address => bool) isWhale;\r\n\r\n    mapping(address => uint) balance;\r\n\r\n    uint pId;\r\n    struct PoolDeposit {\r\n        uint amount;\r\n        uint time;\r\n    }\r\n\r\n    struct Pool {\r\n        uint userCount;\r\n        uint maxAmount;\r\n        uint yeildPercent;\r\n        uint minDeposit;\r\n        uint rewardTime;\r\n        uint totalDeposit;\r\n        mapping(address => PoolDeposit) ledger;\r\n        mapping(uint => address) user;\r\n    }\r\n    mapping(uint => Pool) pools;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // @dev allows the owner of the contract to add a new liquidity pool.The pool ID starts from 0\r\n    // @params maxAmount: The maximum amount in Wei that the pool can hold.\r\n    // @params yieldPercent: The percentage of rewards that will be given out per unit of time.\r\n    // @params minDeposit: The minimum amount of Wei that must be deposited into the pool.\r\n    // @params rewardTime: The time interval in seconds at which rewards are provided.\r\n    //  After every rewardTime, the user will receive their share of rewards.\r\n    function addPool(uint maxAmount, uint yieldPercent, uint minDeposit, uint rewardTime) public onlyOwner {\r\n        require(minDeposit < maxAmount, \"min should be less than max\");\r\n\r\n        // Mint 100 tokens to msg.sender\r\n        // Similar to how\r\n        // 1 dollar = 100 cents\r\n        // 1 token = 1 * (10 ** decimals)\r\n        _mint(msg.sender, maxAmount * 10 ** uint256(2));\r\n\r\n        pools[pId].maxAmount = maxAmount;\r\n        pools[pId].yeildPercent = yieldPercent;\r\n        pools[pId].minDeposit = minDeposit;\r\n        pools[pId].rewardTime = rewardTime;\r\n        pools[pId].totalDeposit = 0;\r\n\r\n        pId++;\r\n    }\r\n\r\n    // @dev Allows anyone to deposit Wei into a specific liquidity pool.\r\n    //      The function checks if the yield farming is active,\r\n    //      the amount sent is greater than the minimum deposit amount,\r\n    //      and the pool exists. No user is allowed to deposit twice in the same pool.\r\n    function depositWei(uint poolId) public payable {\r\n        require(pools[poolId].minDeposit < msg.value, \"Insufficient Deposit\");\r\n        require(pools[poolId].maxAmount >= msg.value + pools[poolId].totalDeposit, \"max limit exceeded\");\r\n\r\n        pools[poolId].totalDeposit += msg.value;\r\n\r\n        balance[msg.sender] += msg.value;\r\n\r\n        pools[poolId].ledger[msg.sender].amount = msg.value;\r\n        pools[poolId].ledger[msg.sender].time = block.timestamp;\r\n\r\n        uint userCount = pools[poolId].userCount;\r\n        pools[poolId].user[userCount] = msg.sender;\r\n        pools[poolId].userCount += 1;\r\n\r\n        if (balance[msg.sender] > whaleThreshold) {\r\n            isWhale[msg.sender] = true;\r\n            whales.push(msg.sender);\r\n        }\r\n    }\r\n\r\n    // @dev Enables a user to withdraw a specified amount of Wei they have deposited.\r\n    //      If the user withdraws all of their deposited Wei,\r\n    //      their unclaimed rewards are reset to zero.\r\n    function withdrawWei(uint poolId, uint amount) public { \r\n       require(pools[poolId].ledger[msg.sender].amount > 0, \"insufficient funds\");\r\n\r\n        pools[poolId].ledger[msg.sender].amount -= amount;\r\n        pools[poolId].totalDeposit -= amount;\r\n        balance[msg.sender] -= amount;\r\n\r\n        if (pools[poolId].ledger[msg.sender].amount == 0) {\r\n             pools[poolId].ledger[msg.sender].time = block.timestamp;\r\n        }\r\n\r\n        payable(msg.sender).transfer(amount);\r\n    }\r\n\r\n    // @dev Allows a user to claim their rewards.\r\n    //      The rewards are proportional to the amount of time and the amount of Wei that the user has deposited.\r\n    //      For example, if the yield percent is 2%, reward time is 10 seconds and a user who deposited 100 Wei\r\n    //      and waited for 30 seconds would receive 6 tokens. This function can only be called if the claimable\r\n    //      reward is greater than 0.\r\n    function claimRewards(uint poolId) public {\r\n        uint rewards = checkClaimableRewards(poolId);\r\n        require(rewards > 0, \"no rewards\");\r\n\r\n        if (isWhale[msg.sender]) {\r\n            rewards = (rewards * 120) / 100;\r\n        }\r\n\r\n        pools[poolId].ledger[msg.sender].time = block.timestamp;\r\n        _update(owner, msg.sender, rewards);\r\n    }\r\n\r\n    // @dev Returns the details of the specified pool including the\r\n    // maximum amount, yield percentage, minimum deposit, and reward providing time.\r\n    function checkPoolDetails(uint poolId) public view returns (uint, uint, uint, uint) {\r\n        return (\r\n            pools[poolId].maxAmount,\r\n            pools[poolId].yeildPercent,\r\n            pools[poolId].minDeposit,\r\n            pools[poolId].rewardTime\r\n        );\r\n    }\r\n\r\n    // @dev Returns the total amount of Wei that the user has deposited in all pools and the total claimable rewards\r\n    function checkUserDeposits(address user) public view returns (uint, uint) {\r\n        uint rewards = 0;\r\n\r\n        for(uint i = 0; i < pId; i++) {\r\n            uint timeElapsed = block.timestamp - pools[i].ledger[user].time;\r\n\r\n            uint rewardTime = timeElapsed / pools[i].rewardTime;\r\n\r\n            uint rewardPercentage = pools[i].yeildPercent * rewardTime;\r\n\r\n            uint reward = (pools[i].ledger[user].amount * rewardPercentage) / 100;\r\n\r\n            rewards += reward;\r\n        }\r\n\r\n        return (balance[user], rewards);\r\n    }\r\n\r\n    // @dev  Returns two arrays - the list of addresses that have deposited in the specified pool, and the amount they have deposited.\r\n    function checkUserDepositInPool(uint poolId) public view returns (address[] memory, uint[] memory) {\r\n        uint userCount = pools[poolId].userCount;\r\n        address[] memory users = new address[](userCount);\r\n        uint[] memory deposits = new uint[](userCount);\r\n\r\n        for(uint i = 0; i < userCount; i++) {\r\n            address user = pools[poolId].user[i];\r\n            users[i] = user;\r\n\r\n            uint deposit = pools[poolId].ledger[user].amount;\r\n            deposits[i] = deposit;\r\n        }\r\n\r\n        return (users, deposits);\r\n    }\r\n\r\n    // @dev Returns the number of tokens that a depositor will receive after the reward time has passed for the specified pool.\r\n    //      For example, if the yield rate is 2% ,reward time is 10 seconds, a user who deposited 100 Wei and waited for 30 seconds\r\n    //      would receive 6 tokens.\r\n    function checkClaimableRewards(uint poolId) public view returns (uint) {\r\n        uint timeElapsed = block.timestamp - pools[poolId].ledger[msg.sender].time;\r\n\r\n        uint rewardTime = timeElapsed / pools[poolId].rewardTime;\r\n\r\n        uint rewardPercentage = pools[poolId].yeildPercent * rewardTime;\r\n\r\n        uint reward = (pools[poolId].ledger[msg.sender].amount * rewardPercentage) / 100;\r\n\r\n        return reward;\r\n    }\r\n\r\n    // @dev Returns the remaining capacity of the specified pool in Wei.\r\n    function checkRemainingCapacity(uint poolId) public view returns (uint) {\r\n        return pools[poolId].maxAmount - pools[poolId].totalDeposit;\r\n    }\r\n\r\n    // @dev Return an array of addresses that are considered \"whale\" wallets.\r\n    function checkWhaleWallets() public view returns (address[] memory) {\r\n        return whales;\r\n    }\r\n}\r\n"}},"settings":{"metadata":{"bytecodeHash":"none","useLiteralContent":true},"optimizer":{"enabled":true,"runs":800},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:139:0","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"288:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"307:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"627:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"660:6:0","nodeType":"VariableDeclaration","scope":11,"src":"652:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"676:7:0","nodeType":"VariableDeclaration","scope":11,"src":"668:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"693:6:0","nodeType":"VariableDeclaration","scope":11,"src":"685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:0"},"src":"621:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"707:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"870:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"897:6:0","nodeType":"VariableDeclaration","scope":16,"src":"889:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:0"},"src":"864:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"911:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1102:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:0"},"src":"1075:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1126:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1517:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1509:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1526:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1553:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1545:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:0"},"src":"1476:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1567:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1752:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1781:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1773:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:0"},"src":"1746:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1797:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2003:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2031:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2023:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:0"},"src":"1997:43:0"}],"scope":137,"src":"278:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2044:141:0","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2196:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2216:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2446:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2473:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:0"},"src":"2440:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2486:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2629:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:0"},"src":"2623:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2675:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3004:6:0","nodeType":"VariableDeclaration","scope":61,"src":"2996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3037:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:0"},"src":"2969:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3050:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3213:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3241:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3233:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:0"},"src":"3207:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3255:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3447:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:0"},"src":"3419:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3471:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3764:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3756:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3774:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:0"},"src":"3723:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3797:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3982:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4012:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4004:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:0"},"src":"3976:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4028:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4236:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4266:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4258:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:0"},"src":"4230:46:0"}],"scope":137,"src":"2186:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4280:143:0","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4434:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4455:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4862:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4878:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4895:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4887:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4903:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:0"},"src":"4821:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4926:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5089:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5118:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:0"},"src":"5083:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5132:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5325:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:0"},"src":"5296:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5349:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5653:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5645:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5671:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5663:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:0"},"src":"5610:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5684:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5900:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5892:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:0"},"src":"5863:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5916:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6155:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6147:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:0"},"src":"6118:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6171:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6488:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6507:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:0"},"src":"6456:73:0"}],"scope":137,"src":"4424:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6420:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1428:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1428:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1428:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1437:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1437:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1437:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1445:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1445:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1445:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1461:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1461:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1461:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:1052:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1419:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1480:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1496:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1540:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1556:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1583:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1630:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1665:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1691:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1952:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1962:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1970:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1962:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1985:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1995:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1985:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1720:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1908:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1929:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:1"},"scope":651,"src":"1896:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"2134:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2151:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"2144:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"2015:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2119:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:1"},"scope":651,"src":"2074:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2338:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2355:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2348:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2169:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2323:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:1"},"scope":651,"src":"2276:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"3058:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"3068:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2375:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"3051:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:1"},"scope":651,"src":"3002:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"3205:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3222:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"3215:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3090:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"3196:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:1"},"scope":651,"src":"3144:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3373:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3390:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3400:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3383:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"3247:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3326:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3318:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3364:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:1"},"scope":651,"src":"3299:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3685:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3695:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3711:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3743:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3750:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3754:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3733:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3733:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3770:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3421:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3636:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3628:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3648:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3640:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3679:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:1"},"scope":651,"src":"3610:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3935:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3952:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3964:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3971:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3945:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3794:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3865:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3880:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:1"},"scope":651,"src":"3846:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4372:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4382:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4398:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4429:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4436:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4420:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4420:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4461:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3992:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4310:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4335:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4327:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4366:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:1"},"scope":651,"src":"4293:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"5132:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:1","nodeType":"VariableDeclaration","scope":333,"src":"5142:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"5160:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5198:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5204:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5213:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5182:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5182:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5239:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5245:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"5229:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"5229:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5265:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4485:549:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"5069:4:1","nodeType":"VariableDeclaration","scope":334,"src":"5061:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"5083:2:1","nodeType":"VariableDeclaration","scope":334,"src":"5075:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"5095:5:1","nodeType":"VariableDeclaration","scope":334,"src":"5087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"5126:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:1"},"scope":651,"src":"5039:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5725:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5739:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5735:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5759:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5780:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"5773:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5834:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5830:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5852:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5873:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"RevertStatement","src":"5866:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5933:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5939:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5943:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5925:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5925:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5289:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5683:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5675:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5697:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5689:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5709:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5701:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:1"},"scope":651,"src":"5656:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6346:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6360:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6534:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6548:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6570:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6580:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6603:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6617:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6599:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6624:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6680:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6693:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6649:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"RevertStatement","src":"6642:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6727:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6834:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6844:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6852:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6866:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6834:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6356:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6380:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6496:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6512:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6496:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6910:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"7125:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"7139:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7284:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7294:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7301:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7284:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6906:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6928:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6942:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"7073:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7089:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"7073:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7355:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7361:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7365:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7346:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7341:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5962:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6296:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6288:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6310:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6302:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6322:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6314:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:1"},"scope":651,"src":"6271:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7777:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7791:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7787:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7814:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7835:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"7828:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7907:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7916:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7887:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7887:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7384:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7744:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7761:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7753:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:1"},"scope":651,"src":"7721:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8303:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8317:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8313:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8340:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8361:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"RevertStatement","src":"8354:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8419:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8440:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8411:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8411:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7935:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8270:7:1","nodeType":"VariableDeclaration","scope":524,"src":"8262:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8287:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8279:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:1"},"scope":651,"src":"8247:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"9063:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9082:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9089:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9098:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"9073:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9073:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8459:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9007:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:1","nodeType":"VariableDeclaration","scope":542,"src":"9022:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"9047:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9039:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:1"},"scope":651,"src":"8989:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"10047:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"10057:89:1","trueBody":{"id":567,"nodeType":"Block","src":"10082:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"10103:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"RevertStatement","src":"10096:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10159:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"10155:90:1","trueBody":{"id":582,"nodeType":"Block","src":"10182:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"10203:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"RevertStatement","src":"10196:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10254:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10266:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10273:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10284:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10254:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10303:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10299:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10314:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10342:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10349:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10358:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10333:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10328:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"9123:821:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9967:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9982:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"10007:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9999:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:1","nodeType":"VariableDeclaration","scope":602,"src":"10014:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:1"},"scope":651,"src":"9949:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10752:388:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10762:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10799:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10806:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10789:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:1","memberName":"max","nodeType":"MemberAccess","src":"10848:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10824:310:1","trueBody":{"id":647,"nodeType":"Block","src":"10867:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10885:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10904:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10881:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10911:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10972:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10990:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10936:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"10929:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"11024:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"11061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"11068:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"11077:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"11096:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"11052:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"11052:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10387:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10688:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10703:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10728:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10720:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:1"},"scope":651,"src":"10663:477:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1401:9741:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:11038:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":663,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":663,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":663,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":672,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":672,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":672,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":729,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":686,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":729,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":729,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":729,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":729,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":729,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"203:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2673:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"305:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:86:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":755,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":755,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":755,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"277:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:558:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"contracts/YieldFarming.sol":{"ast":{"absolutePath":"contracts/YieldFarming.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"YieldFarming":[1481]},"id":1482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":652,"src":"61:55:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":789,"name":"ERC20","nameLocations":["145:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"145:5:5"},"id":790,"nodeType":"InheritanceSpecifier","src":"145:5:5"}],"canonicalName":"YieldFarming","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1481,"linearizedBaseContracts":[1481,651,41,755,729,785],"name":"YieldFarming","nameLocation":"129:12:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":792,"mutability":"mutable","name":"owner","nameLocation":"173:5:5","nodeType":"VariableDeclaration","scope":1481,"src":"158:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"158:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":795,"mutability":"mutable","name":"whaleThreshold","nameLocation":"190:14:5","nodeType":"VariableDeclaration","scope":1481,"src":"185:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint","nodeType":"ElementaryTypeName","src":"185:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"207:9:5","subdenomination":"wei","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"whales","nameLocation":"233:6:5","nodeType":"VariableDeclaration","scope":1481,"src":"223:16:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":797,"nodeType":"ArrayTypeName","src":"223:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"isWhale","nameLocation":"271:7:5","nodeType":"VariableDeclaration","scope":1481,"src":"246:32:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":801,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"254:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"246:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":800,"name":"bool","nodeType":"ElementaryTypeName","src":"265:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"balance","nameLocation":"312:7:5","nodeType":"VariableDeclaration","scope":1481,"src":"287:32:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":805,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"287:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":804,"name":"uint","nodeType":"ElementaryTypeName","src":"306:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"pId","nameLocation":"333:3:5","nodeType":"VariableDeclaration","scope":1481,"src":"328:8:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint","nodeType":"ElementaryTypeName","src":"328:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"canonicalName":"YieldFarming.PoolDeposit","id":813,"members":[{"constant":false,"id":810,"mutability":"mutable","name":"amount","nameLocation":"378:6:5","nodeType":"VariableDeclaration","scope":813,"src":"373:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint","nodeType":"ElementaryTypeName","src":"373:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"time","nameLocation":"400:4:5","nodeType":"VariableDeclaration","scope":813,"src":"395:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint","nodeType":"ElementaryTypeName","src":"395:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolDeposit","nameLocation":"350:11:5","nodeType":"StructDefinition","scope":1481,"src":"343:69:5","visibility":"public"},{"canonicalName":"YieldFarming.Pool","id":835,"members":[{"constant":false,"id":815,"mutability":"mutable","name":"userCount","nameLocation":"448:9:5","nodeType":"VariableDeclaration","scope":835,"src":"443:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint","nodeType":"ElementaryTypeName","src":"443:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"maxAmount","nameLocation":"473:9:5","nodeType":"VariableDeclaration","scope":835,"src":"468:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint","nodeType":"ElementaryTypeName","src":"468:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"yeildPercent","nameLocation":"498:12:5","nodeType":"VariableDeclaration","scope":835,"src":"493:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint","nodeType":"ElementaryTypeName","src":"493:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"minDeposit","nameLocation":"526:10:5","nodeType":"VariableDeclaration","scope":835,"src":"521:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint","nodeType":"ElementaryTypeName","src":"521:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"rewardTime","nameLocation":"552:10:5","nodeType":"VariableDeclaration","scope":835,"src":"547:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint","nodeType":"ElementaryTypeName","src":"547:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"totalDeposit","nameLocation":"578:12:5","nodeType":"VariableDeclaration","scope":835,"src":"573:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint","nodeType":"ElementaryTypeName","src":"573:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"ledger","nameLocation":"633:6:5","nodeType":"VariableDeclaration","scope":835,"src":"601:38:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit)"},"typeName":{"id":829,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"601:31:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":828,"nodeType":"UserDefinedTypeName","pathNode":{"id":827,"name":"PoolDeposit","nameLocations":["620:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"620:11:5"},"referencedDeclaration":813,"src":"620:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage_ptr","typeString":"struct YieldFarming.PoolDeposit"}}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"user","nameLocation":"675:4:5","nodeType":"VariableDeclaration","scope":835,"src":"650:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":833,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":831,"name":"uint","nodeType":"ElementaryTypeName","src":"658:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"650:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"666:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"}],"name":"Pool","nameLocation":"427:4:5","nodeType":"StructDefinition","scope":1481,"src":"420:267:5","visibility":"public"},{"constant":false,"id":840,"mutability":"mutable","name":"pools","nameLocation":"715:5:5","nodeType":"VariableDeclaration","scope":1481,"src":"693:27:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool)"},"typeName":{"id":839,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":836,"name":"uint","nodeType":"ElementaryTypeName","src":"701:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"693:21:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"Pool","nameLocations":["709:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":835,"src":"709:4:5"},"referencedDeclaration":835,"src":"709:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage_ptr","typeString":"struct YieldFarming.Pool"}}},"visibility":"internal"},{"body":{"id":851,"nodeType":"Block","src":"750:96:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":843,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"769:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"773:6:5","memberName":"sender","nodeType":"MemberAccess","src":"769:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"783:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"769:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"790:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""},"value":"Only owner can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""}],"id":842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"761:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"761:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":849,"nodeType":"ExpressionStatement","src":"761:65:5"},{"id":850,"nodeType":"PlaceholderStatement","src":"837:1:5"}]},"id":852,"name":"onlyOwner","nameLocation":"738:9:5","nodeType":"ModifierDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"747:2:5"},"src":"729:117:5","virtual":false,"visibility":"internal"},{"body":{"id":868,"nodeType":"Block","src":"928:37:5","statements":[{"expression":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":863,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"939:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":864,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"947:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"951:6:5","memberName":"sender","nodeType":"MemberAccess","src":"947:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"939:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":867,"nodeType":"ExpressionStatement","src":"939:18:5"}]},"id":869,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":859,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"914:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":860,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"920:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":861,"kind":"baseConstructorSpecifier","modifierName":{"id":858,"name":"ERC20","nameLocations":["908:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"908:5:5"},"nodeType":"ModifierInvocation","src":"908:19:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"name","nameLocation":"880:4:5","nodeType":"VariableDeclaration","scope":869,"src":"866:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":853,"name":"string","nodeType":"ElementaryTypeName","src":"866:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"symbol","nameLocation":"900:6:5","nodeType":"VariableDeclaration","scope":869,"src":"886:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":855,"name":"string","nodeType":"ElementaryTypeName","src":"886:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"865:42:5"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"928:0:5"},"scope":1481,"src":"854:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":940,"nodeType":"Block","src":"1609:526:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":883,"name":"minDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"1628:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":884,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1641:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1628:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d696e2073686f756c64206265206c657373207468616e206d6178","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1652:29:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_256ba5c174baaeb521b2e7aa542991d69ad896f2091eb3ab87dfa8c88f77f7df","typeString":"literal_string \"min should be less than max\""},"value":"min should be less than max"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_256ba5c174baaeb521b2e7aa542991d69ad896f2091eb3ab87dfa8c88f77f7df","typeString":"literal_string \"min should be less than max\""}],"id":882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1620:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1620:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"1620:62:5"},{"expression":{"arguments":[{"expression":{"id":890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1846:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1846:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1858:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1870:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"hexValue":"32","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1876:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:5","typeDescriptions":{}}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1876:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1870:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1858:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":889,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1840:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1840:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"1840:47:5"},{"expression":{"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":902,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"1900:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":904,"indexExpression":{"id":903,"name":"pId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1906:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1900:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1911:9:5","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":817,"src":"1900:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":906,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1923:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1900:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":908,"nodeType":"ExpressionStatement","src":"1900:32:5"},{"expression":{"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":909,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"1943:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":911,"indexExpression":{"id":910,"name":"pId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1949:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1943:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1954:12:5","memberName":"yeildPercent","nodeType":"MemberAccess","referencedDeclaration":819,"src":"1943:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":913,"name":"yieldPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"1969:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1943:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":915,"nodeType":"ExpressionStatement","src":"1943:38:5"},{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":916,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"1992:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":918,"indexExpression":{"id":917,"name":"pId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1998:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1992:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2003:10:5","memberName":"minDeposit","nodeType":"MemberAccess","referencedDeclaration":821,"src":"1992:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":920,"name":"minDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"2016:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1992:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":922,"nodeType":"ExpressionStatement","src":"1992:34:5"},{"expression":{"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":923,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2037:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":925,"indexExpression":{"id":924,"name":"pId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2043:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2037:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2048:10:5","memberName":"rewardTime","nodeType":"MemberAccess","referencedDeclaration":823,"src":"2037:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":927,"name":"rewardTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2061:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2037:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"nodeType":"ExpressionStatement","src":"2037:34:5"},{"expression":{"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":930,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2082:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":932,"indexExpression":{"id":931,"name":"pId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2088:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2082:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2093:12:5","memberName":"totalDeposit","nodeType":"MemberAccess","referencedDeclaration":825,"src":"2082:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2082:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":936,"nodeType":"ExpressionStatement","src":"2082:27:5"},{"expression":{"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2122:5:5","subExpression":{"id":937,"name":"pId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2122:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":939,"nodeType":"ExpressionStatement","src":"2122:5:5"}]},"functionSelector":"b7c7c4e0","id":941,"implemented":true,"kind":"function","modifiers":[{"id":880,"kind":"modifierInvocation","modifierName":{"id":879,"name":"onlyOwner","nameLocations":["1599:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":852,"src":"1599:9:5"},"nodeType":"ModifierInvocation","src":"1599:9:5"}],"name":"addPool","nameLocation":"1515:7:5","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"maxAmount","nameLocation":"1528:9:5","nodeType":"VariableDeclaration","scope":941,"src":"1523:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint","nodeType":"ElementaryTypeName","src":"1523:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"yieldPercent","nameLocation":"1544:12:5","nodeType":"VariableDeclaration","scope":941,"src":"1539:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint","nodeType":"ElementaryTypeName","src":"1539:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"minDeposit","nameLocation":"1563:10:5","nodeType":"VariableDeclaration","scope":941,"src":"1558:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint","nodeType":"ElementaryTypeName","src":"1558:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"rewardTime","nameLocation":"1580:10:5","nodeType":"VariableDeclaration","scope":941,"src":"1575:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint","nodeType":"ElementaryTypeName","src":"1575:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1522:69:5"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"1609:0:5"},"scope":1481,"src":"1506:629:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1059,"nodeType":"Block","src":"2491:712:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":947,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2510:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":949,"indexExpression":{"id":948,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2516:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2510:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:5","memberName":"minDeposit","nodeType":"MemberAccess","referencedDeclaration":821,"src":"2510:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":951,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2537:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2541:5:5","memberName":"value","nodeType":"MemberAccess","src":"2537:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2510:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204465706f736974","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2548:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5363af03e03c9fa33635a23e559baa409daf2be12a3bbb8308c387e9527b6660","typeString":"literal_string \"Insufficient Deposit\""},"value":"Insufficient Deposit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5363af03e03c9fa33635a23e559baa409daf2be12a3bbb8308c387e9527b6660","typeString":"literal_string \"Insufficient Deposit\""}],"id":946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2502:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"ExpressionStatement","src":"2502:69:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":958,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2590:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":960,"indexExpression":{"id":959,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2596:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2590:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2604:9:5","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":817,"src":"2590:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2617:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2621:5:5","memberName":"value","nodeType":"MemberAccess","src":"2617:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"id":964,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2629:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":966,"indexExpression":{"id":965,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2635:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2629:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2643:12:5","memberName":"totalDeposit","nodeType":"MemberAccess","referencedDeclaration":825,"src":"2629:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2617:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2590:65:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d6178206c696d6974206578636565646564","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f1a03a73967bd0630d11134aa7813e413618859a043f2c49b19c7944b8b70d0","typeString":"literal_string \"max limit exceeded\""},"value":"max limit exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f1a03a73967bd0630d11134aa7813e413618859a043f2c49b19c7944b8b70d0","typeString":"literal_string \"max limit exceeded\""}],"id":957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2582:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2582:96:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"2582:96:5"},{"expression":{"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":973,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2691:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":975,"indexExpression":{"id":974,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2697:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2691:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2705:12:5","memberName":"totalDeposit","nodeType":"MemberAccess","referencedDeclaration":825,"src":"2691:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2721:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2725:5:5","memberName":"value","nodeType":"MemberAccess","src":"2721:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2691:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":980,"nodeType":"ExpressionStatement","src":"2691:39:5"},{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":981,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2743:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":984,"indexExpression":{"expression":{"id":982,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2751:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2751:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2743:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":985,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2766:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2770:5:5","memberName":"value","nodeType":"MemberAccess","src":"2766:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2743:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ExpressionStatement","src":"2743:32:5"},{"expression":{"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":989,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2788:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":991,"indexExpression":{"id":990,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2794:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2788:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2802:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"2788:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":995,"indexExpression":{"expression":{"id":993,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2809:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2813:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2809:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2788:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2821:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":810,"src":"2788:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":997,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2830:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2834:5:5","memberName":"value","nodeType":"MemberAccess","src":"2830:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2788:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1000,"nodeType":"ExpressionStatement","src":"2788:51:5"},{"expression":{"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1001,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2850:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1003,"indexExpression":{"id":1002,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2856:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2850:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"2850:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1007,"indexExpression":{"expression":{"id":1005,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2871:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2875:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2871:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2850:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2883:4:5","memberName":"time","nodeType":"MemberAccess","referencedDeclaration":812,"src":"2850:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1009,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2890:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2896:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"2890:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2850:55:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1012,"nodeType":"ExpressionStatement","src":"2850:55:5"},{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"userCount","nameLocation":"2923:9:5","nodeType":"VariableDeclaration","scope":1059,"src":"2918:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint","nodeType":"ElementaryTypeName","src":"2918:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1019,"initialValue":{"expression":{"baseExpression":{"id":1015,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2935:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1017,"indexExpression":{"id":1016,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2941:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2935:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2949:9:5","memberName":"userCount","nodeType":"MemberAccess","referencedDeclaration":815,"src":"2935:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2918:40:5"},{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":1020,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2969:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1022,"indexExpression":{"id":1021,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2975:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2969:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2983:4:5","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":834,"src":"2969:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1025,"indexExpression":{"id":1024,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"2988:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2969:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1026,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3001:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3005:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3001:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2969:42:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1029,"nodeType":"ExpressionStatement","src":"2969:42:5"},{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1030,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"3022:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1032,"indexExpression":{"id":1031,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3028:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3022:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3036:9:5","memberName":"userCount","nodeType":"MemberAccess","referencedDeclaration":815,"src":"3022:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3049:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3022:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ExpressionStatement","src":"3022:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1037,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"3067:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1040,"indexExpression":{"expression":{"id":1038,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3075:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3079:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3075:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3067:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1041,"name":"whaleThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3089:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3067:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"IfStatement","src":"3063:133:5","trueBody":{"id":1057,"nodeType":"Block","src":"3105:91:5","statements":[{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1043,"name":"isWhale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"3120:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1046,"indexExpression":{"expression":{"id":1044,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3128:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3132:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3128:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3120:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3142:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3120:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"ExpressionStatement","src":"3120:26:5"},{"expression":{"arguments":[{"expression":{"id":1053,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3173:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3177:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3173:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1050,"name":"whales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3161:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3168:4:5","memberName":"push","nodeType":"MemberAccess","src":"3161:11:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3161:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"ExpressionStatement","src":"3161:23:5"}]}}]},"functionSelector":"a3f81da0","id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"depositWei","nameLocation":"2452:10:5","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"poolId","nameLocation":"2468:6:5","nodeType":"VariableDeclaration","scope":1060,"src":"2463:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint","nodeType":"ElementaryTypeName","src":"2463:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2462:13:5"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[],"src":"2491:0:5"},"scope":1481,"src":"2443:760:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1139,"nodeType":"Block","src":"3471:436:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1068,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"3490:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1070,"indexExpression":{"id":1069,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3496:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3490:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3504:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"3490:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1074,"indexExpression":{"expression":{"id":1072,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3511:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3515:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3511:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3490:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3523:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":810,"src":"3490:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3532:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3490:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e742066756e6473","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3535:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5","typeString":"literal_string \"insufficient funds\""},"value":"insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5","typeString":"literal_string \"insufficient funds\""}],"id":1067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3482:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3482:74:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1080,"nodeType":"ExpressionStatement","src":"3482:74:5"},{"expression":{"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1081,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"3569:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1083,"indexExpression":{"id":1082,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3575:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3569:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3583:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"3569:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1087,"indexExpression":{"expression":{"id":1085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3590:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3594:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3590:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3569:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3602:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":810,"src":"3569:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1089,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"3612:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3569:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"nodeType":"ExpressionStatement","src":"3569:49:5"},{"expression":{"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1092,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"3629:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1094,"indexExpression":{"id":1093,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3635:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3629:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3643:12:5","memberName":"totalDeposit","nodeType":"MemberAccess","referencedDeclaration":825,"src":"3629:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1096,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"3659:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3629:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1098,"nodeType":"ExpressionStatement","src":"3629:36:5"},{"expression":{"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1099,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"3676:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1102,"indexExpression":{"expression":{"id":1100,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3684:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3688:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3684:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3676:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1103,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"3699:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3676:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1105,"nodeType":"ExpressionStatement","src":"3676:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1106,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"3722:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1108,"indexExpression":{"id":1107,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3728:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3722:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3736:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"3722:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1112,"indexExpression":{"expression":{"id":1110,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3743:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3747:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3743:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3722:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3755:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":810,"src":"3722:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3765:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3722:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1129,"nodeType":"IfStatement","src":"3718:133:5","trueBody":{"id":1128,"nodeType":"Block","src":"3768:83:5","statements":[{"expression":{"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1116,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"3784:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1118,"indexExpression":{"id":1117,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3790:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3784:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3798:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"3784:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1122,"indexExpression":{"expression":{"id":1120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3805:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3805:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3784:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3817:4:5","memberName":"time","nodeType":"MemberAccess","referencedDeclaration":812,"src":"3784:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1124,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3824:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3830:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"3824:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3784:55:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1127,"nodeType":"ExpressionStatement","src":"3784:55:5"}]}},{"expression":{"arguments":[{"id":1136,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"3892:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1132,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3871:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3875:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3871:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3863:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"3863:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3883:8:5","memberName":"transfer","nodeType":"MemberAccess","src":"3863:28:5","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"3863:36:5"}]},"functionSelector":"a8376b3c","id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawWei","nameLocation":"3426:11:5","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"poolId","nameLocation":"3443:6:5","nodeType":"VariableDeclaration","scope":1140,"src":"3438:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint","nodeType":"ElementaryTypeName","src":"3438:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"amount","nameLocation":"3456:6:5","nodeType":"VariableDeclaration","scope":1140,"src":"3451:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint","nodeType":"ElementaryTypeName","src":"3451:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:26:5"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"3471:0:5"},"scope":1481,"src":"3417:490:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1192,"nodeType":"Block","src":"4388:317:5","statements":[{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"mutability":"mutable","name":"rewards","nameLocation":"4404:7:5","nodeType":"VariableDeclaration","scope":1192,"src":"4399:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint","nodeType":"ElementaryTypeName","src":"4399:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1150,"initialValue":{"arguments":[{"id":1148,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4436:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1147,"name":"checkClaimableRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"4414:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4414:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4399:44:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"4462:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4472:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4462:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f2072657761726473","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4475:12:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d7d4657f1e5c346169e33cfd4ee94460b0279d85f82631dbf0b0dfbfdb665b6","typeString":"literal_string \"no rewards\""},"value":"no rewards"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d7d4657f1e5c346169e33cfd4ee94460b0279d85f82631dbf0b0dfbfdb665b6","typeString":"literal_string \"no rewards\""}],"id":1151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4454:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4454:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1157,"nodeType":"ExpressionStatement","src":"4454:34:5"},{"condition":{"baseExpression":{"id":1158,"name":"isWhale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"4505:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1161,"indexExpression":{"expression":{"id":1159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4513:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4517:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4513:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4505:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1172,"nodeType":"IfStatement","src":"4501:83:5","trueBody":{"id":1171,"nodeType":"Block","src":"4526:58:5","statements":[{"expression":{"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1162,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"4541:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"4552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313230","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4562:3:5","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},"src":"4552:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4551:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4569:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4551:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4541:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1170,"nodeType":"ExpressionStatement","src":"4541:31:5"}]}},{"expression":{"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1173,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"4596:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1175,"indexExpression":{"id":1174,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4602:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4596:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4610:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"4596:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1179,"indexExpression":{"expression":{"id":1177,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4617:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4621:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4617:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4596:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4629:4:5","memberName":"time","nodeType":"MemberAccess","referencedDeclaration":812,"src":"4596:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1181,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4636:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4642:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"4636:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4596:55:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1184,"nodeType":"ExpressionStatement","src":"4596:55:5"},{"expression":{"arguments":[{"id":1186,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"4670:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4677:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4681:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4677:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1189,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"4689:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1185,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"4662:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4662:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"4662:35:5"}]},"functionSelector":"0962ef79","id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"claimRewards","nameLocation":"4355:12:5","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"poolId","nameLocation":"4373:6:5","nodeType":"VariableDeclaration","scope":1193,"src":"4368:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint","nodeType":"ElementaryTypeName","src":"4368:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4367:13:5"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"4388:0:5"},"scope":1481,"src":"4346:359:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1224,"nodeType":"Block","src":"4952:194:5","statements":[{"expression":{"components":[{"expression":{"baseExpression":{"id":1206,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"4985:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1208,"indexExpression":{"id":1207,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"4991:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4985:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4999:9:5","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":817,"src":"4985:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1210,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5023:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1212,"indexExpression":{"id":1211,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5029:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5023:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5037:12:5","memberName":"yeildPercent","nodeType":"MemberAccess","referencedDeclaration":819,"src":"5023:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1214,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5064:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1216,"indexExpression":{"id":1215,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5070:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5064:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5078:10:5","memberName":"minDeposit","nodeType":"MemberAccess","referencedDeclaration":821,"src":"5064:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1218,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5103:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1220,"indexExpression":{"id":1219,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5109:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5103:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5117:10:5","memberName":"rewardTime","nodeType":"MemberAccess","referencedDeclaration":823,"src":"5103:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4970:168:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256)"}},"functionReturnParameters":1205,"id":1223,"nodeType":"Return","src":"4963:175:5"}]},"functionSelector":"8fb0a9f4","id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"checkPoolDetails","nameLocation":"4877:16:5","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"poolId","nameLocation":"4899:6:5","nodeType":"VariableDeclaration","scope":1225,"src":"4894:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint","nodeType":"ElementaryTypeName","src":"4894:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4893:13:5"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"4928:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint","nodeType":"ElementaryTypeName","src":"4928:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"4934:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint","nodeType":"ElementaryTypeName","src":"4934:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"4940:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint","nodeType":"ElementaryTypeName","src":"4940:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"4946:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint","nodeType":"ElementaryTypeName","src":"4946:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4927:24:5"},"scope":1481,"src":"4868:278:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1306,"nodeType":"Block","src":"5346:474:5","statements":[{"assignments":[1235],"declarations":[{"constant":false,"id":1235,"mutability":"mutable","name":"rewards","nameLocation":"5362:7:5","nodeType":"VariableDeclaration","scope":1306,"src":"5357:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint","nodeType":"ElementaryTypeName","src":"5357:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1237,"initialValue":{"hexValue":"30","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5372:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5357:16:5"},{"body":{"id":1298,"nodeType":"Block","src":"5416:353:5","statements":[{"assignments":[1249],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"timeElapsed","nameLocation":"5436:11:5","nodeType":"VariableDeclaration","scope":1298,"src":"5431:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint","nodeType":"ElementaryTypeName","src":"5431:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1260,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1250,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5450:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"5450:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1252,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5468:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1254,"indexExpression":{"id":1253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5474:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5468:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5477:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"5468:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1257,"indexExpression":{"id":1256,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5484:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5468:21:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5490:4:5","memberName":"time","nodeType":"MemberAccess","referencedDeclaration":812,"src":"5468:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5450:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5431:63:5"},{"assignments":[1262],"declarations":[{"constant":false,"id":1262,"mutability":"mutable","name":"rewardTime","nameLocation":"5516:10:5","nodeType":"VariableDeclaration","scope":1298,"src":"5511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint","nodeType":"ElementaryTypeName","src":"5511:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1269,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"5529:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"baseExpression":{"id":1264,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5543:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1266,"indexExpression":{"id":1265,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5549:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5543:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5552:10:5","memberName":"rewardTime","nodeType":"MemberAccess","referencedDeclaration":823,"src":"5543:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5529:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5511:51:5"},{"assignments":[1271],"declarations":[{"constant":false,"id":1271,"mutability":"mutable","name":"rewardPercentage","nameLocation":"5584:16:5","nodeType":"VariableDeclaration","scope":1298,"src":"5579:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint","nodeType":"ElementaryTypeName","src":"5579:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1278,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1272,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5603:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1274,"indexExpression":{"id":1273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5609:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5603:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5612:12:5","memberName":"yeildPercent","nodeType":"MemberAccess","referencedDeclaration":819,"src":"5603:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1276,"name":"rewardTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"5627:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5603:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5579:58:5"},{"assignments":[1280],"declarations":[{"constant":false,"id":1280,"mutability":"mutable","name":"reward","nameLocation":"5659:6:5","nodeType":"VariableDeclaration","scope":1298,"src":"5654:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint","nodeType":"ElementaryTypeName","src":"5654:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1293,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1281,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5669:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1283,"indexExpression":{"id":1282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5675:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5669:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5678:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"5669:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1286,"indexExpression":{"id":1285,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5685:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5669:21:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5691:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":810,"src":"5669:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1288,"name":"rewardPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5700:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5669:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5720:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5668:55:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5654:69:5"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1294,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"5740:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1295,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"5751:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5740:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ExpressionStatement","src":"5740:17:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5402:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1243,"name":"pId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"5406:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5402:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1299,"initializationExpression":{"assignments":[1239],"declarations":[{"constant":false,"id":1239,"mutability":"mutable","name":"i","nameLocation":"5395:1:5","nodeType":"VariableDeclaration","scope":1299,"src":"5390:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint","nodeType":"ElementaryTypeName","src":"5390:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1241,"initialValue":{"hexValue":"30","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5399:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5390:10:5"},"loopExpression":{"expression":{"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5411:3:5","subExpression":{"id":1245,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5411:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1247,"nodeType":"ExpressionStatement","src":"5411:3:5"},"nodeType":"ForStatement","src":"5386:383:5"},{"expression":{"components":[{"baseExpression":{"id":1300,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5789:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1302,"indexExpression":{"id":1301,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5797:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5789:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1303,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"5804:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5788:24:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":1233,"id":1305,"nodeType":"Return","src":"5781:31:5"}]},"functionSelector":"31d98237","id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"checkUserDeposits","nameLocation":"5281:17:5","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"user","nameLocation":"5307:4:5","nodeType":"VariableDeclaration","scope":1307,"src":"5299:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"5299:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5298:14:5"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1307,"src":"5334:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint","nodeType":"ElementaryTypeName","src":"5334:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1307,"src":"5340:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint","nodeType":"ElementaryTypeName","src":"5340:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5333:12:5"},"scope":1481,"src":"5272:548:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1394,"nodeType":"Block","src":"6063:455:5","statements":[{"assignments":[1319],"declarations":[{"constant":false,"id":1319,"mutability":"mutable","name":"userCount","nameLocation":"6079:9:5","nodeType":"VariableDeclaration","scope":1394,"src":"6074:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint","nodeType":"ElementaryTypeName","src":"6074:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1324,"initialValue":{"expression":{"baseExpression":{"id":1320,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"6091:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1322,"indexExpression":{"id":1321,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6097:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6091:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6105:9:5","memberName":"userCount","nodeType":"MemberAccess","referencedDeclaration":815,"src":"6091:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6074:40:5"},{"assignments":[1329],"declarations":[{"constant":false,"id":1329,"mutability":"mutable","name":"users","nameLocation":"6142:5:5","nodeType":"VariableDeclaration","scope":1394,"src":"6125:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"6125:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1328,"nodeType":"ArrayTypeName","src":"6125:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1335,"initialValue":{"arguments":[{"id":1333,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6164:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6150:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"6154:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1331,"nodeType":"ArrayTypeName","src":"6154:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6150:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6125:49:5"},{"assignments":[1340],"declarations":[{"constant":false,"id":1340,"mutability":"mutable","name":"deposits","nameLocation":"6199:8:5","nodeType":"VariableDeclaration","scope":1394,"src":"6185:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1338,"name":"uint","nodeType":"ElementaryTypeName","src":"6185:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ArrayTypeName","src":"6185:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1346,"initialValue":{"arguments":[{"id":1344,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6221:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6210:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1341,"name":"uint","nodeType":"ElementaryTypeName","src":"6214:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1342,"nodeType":"ArrayTypeName","src":"6214:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6210:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6185:46:5"},{"body":{"id":1388,"nodeType":"Block","src":"6280:194:5","statements":[{"assignments":[1358],"declarations":[{"constant":false,"id":1358,"mutability":"mutable","name":"user","nameLocation":"6303:4:5","nodeType":"VariableDeclaration","scope":1388,"src":"6295:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1365,"initialValue":{"baseExpression":{"expression":{"baseExpression":{"id":1359,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"6310:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1361,"indexExpression":{"id":1360,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6316:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6310:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6324:4:5","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":834,"src":"6310:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1364,"indexExpression":{"id":1363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6329:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6310:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6295:36:5"},{"expression":{"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1366,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6346:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1368,"indexExpression":{"id":1367,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6352:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6346:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1369,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"6357:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6346:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1371,"nodeType":"ExpressionStatement","src":"6346:15:5"},{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"deposit","nameLocation":"6383:7:5","nodeType":"VariableDeclaration","scope":1388,"src":"6378:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint","nodeType":"ElementaryTypeName","src":"6378:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1381,"initialValue":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1374,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"6393:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1376,"indexExpression":{"id":1375,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6399:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6393:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6407:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"6393:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1379,"indexExpression":{"id":1378,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"6414:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6393:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6420:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":810,"src":"6393:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6378:48:5"},{"expression":{"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1382,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6441:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1384,"indexExpression":{"id":1383,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6450:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6441:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1385,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6455:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6441:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1387,"nodeType":"ExpressionStatement","src":"6441:21:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6260:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1352,"name":"userCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6264:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6260:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1389,"initializationExpression":{"assignments":[1348],"declarations":[{"constant":false,"id":1348,"mutability":"mutable","name":"i","nameLocation":"6253:1:5","nodeType":"VariableDeclaration","scope":1389,"src":"6248:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint","nodeType":"ElementaryTypeName","src":"6248:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1350,"initialValue":{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6257:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6248:10:5"},"loopExpression":{"expression":{"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6275:3:5","subExpression":{"id":1354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6275:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1356,"nodeType":"ExpressionStatement","src":"6275:3:5"},"nodeType":"ForStatement","src":"6244:230:5"},{"expression":{"components":[{"id":1390,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6494:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1391,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6501:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":1392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6493:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":1317,"id":1393,"nodeType":"Return","src":"6486:24:5"}]},"functionSelector":"c94c178b","id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"checkUserDepositInPool","nameLocation":"5973:22:5","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"poolId","nameLocation":"6001:6:5","nodeType":"VariableDeclaration","scope":1395,"src":"5996:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint","nodeType":"ElementaryTypeName","src":"5996:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5995:13:5"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"6030:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"6030:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1312,"nodeType":"ArrayTypeName","src":"6030:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"6048:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1314,"name":"uint","nodeType":"ElementaryTypeName","src":"6048:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1315,"nodeType":"ArrayTypeName","src":"6048:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6029:33:5"},"scope":1481,"src":"5964:554:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1452,"nodeType":"Block","src":"6896:357:5","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"timeElapsed","nameLocation":"6912:11:5","nodeType":"VariableDeclaration","scope":1452,"src":"6907:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint","nodeType":"ElementaryTypeName","src":"6907:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1415,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1404,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6926:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6932:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"6926:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1406,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"6944:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1408,"indexExpression":{"id":1407,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"6950:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6944:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6958:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"6944:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1412,"indexExpression":{"expression":{"id":1410,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6965:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6969:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6965:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6944:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6977:4:5","memberName":"time","nodeType":"MemberAccess","referencedDeclaration":812,"src":"6944:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6926:55:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6907:74:5"},{"assignments":[1417],"declarations":[{"constant":false,"id":1417,"mutability":"mutable","name":"rewardTime","nameLocation":"6999:10:5","nodeType":"VariableDeclaration","scope":1452,"src":"6994:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1416,"name":"uint","nodeType":"ElementaryTypeName","src":"6994:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1424,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1418,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"7012:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"baseExpression":{"id":1419,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7026:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1421,"indexExpression":{"id":1420,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"7032:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7026:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7040:10:5","memberName":"rewardTime","nodeType":"MemberAccess","referencedDeclaration":823,"src":"7026:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7012:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6994:56:5"},{"assignments":[1426],"declarations":[{"constant":false,"id":1426,"mutability":"mutable","name":"rewardPercentage","nameLocation":"7068:16:5","nodeType":"VariableDeclaration","scope":1452,"src":"7063:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint","nodeType":"ElementaryTypeName","src":"7063:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1433,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1427,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7087:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1429,"indexExpression":{"id":1428,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"7093:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7087:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7101:12:5","memberName":"yeildPercent","nodeType":"MemberAccess","referencedDeclaration":819,"src":"7087:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1431,"name":"rewardTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"7116:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7087:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7063:63:5"},{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"reward","nameLocation":"7144:6:5","nodeType":"VariableDeclaration","scope":1452,"src":"7139:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint","nodeType":"ElementaryTypeName","src":"7139:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1449,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1436,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7154:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1438,"indexExpression":{"id":1437,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"7160:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7154:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7168:6:5","memberName":"ledger","nodeType":"MemberAccess","referencedDeclaration":830,"src":"7154:20:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PoolDeposit_$813_storage_$","typeString":"mapping(address => struct YieldFarming.PoolDeposit storage ref)"}},"id":1442,"indexExpression":{"expression":{"id":1440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7175:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7179:6:5","memberName":"sender","nodeType":"MemberAccess","src":"7175:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7154:32:5","typeDescriptions":{"typeIdentifier":"t_struct$_PoolDeposit_$813_storage","typeString":"struct YieldFarming.PoolDeposit storage ref"}},"id":1443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7187:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":810,"src":"7154:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1444,"name":"rewardPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"7196:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7154:58:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7153:60:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7216:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7153:66:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7139:80:5"},{"expression":{"id":1450,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"7239:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1401,"id":1451,"nodeType":"Return","src":"7232:13:5"}]},"functionSelector":"e0ebf61a","id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"checkClaimableRewards","nameLocation":"6834:21:5","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"poolId","nameLocation":"6861:6:5","nodeType":"VariableDeclaration","scope":1453,"src":"6856:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint","nodeType":"ElementaryTypeName","src":"6856:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:13:5"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"6890:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint","nodeType":"ElementaryTypeName","src":"6890:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6889:6:5"},"scope":1481,"src":"6825:428:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1470,"nodeType":"Block","src":"7407:78:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1460,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7425:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1462,"indexExpression":{"id":1461,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"7431:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7425:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7439:9:5","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":817,"src":"7425:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":1464,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7451:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$835_storage_$","typeString":"mapping(uint256 => struct YieldFarming.Pool storage ref)"}},"id":1466,"indexExpression":{"id":1465,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"7457:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7451:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$835_storage","typeString":"struct YieldFarming.Pool storage ref"}},"id":1467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7465:12:5","memberName":"totalDeposit","nodeType":"MemberAccess","referencedDeclaration":825,"src":"7451:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7425:52:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1459,"id":1469,"nodeType":"Return","src":"7418:59:5"}]},"functionSelector":"f3bc21b9","id":1471,"implemented":true,"kind":"function","modifiers":[],"name":"checkRemainingCapacity","nameLocation":"7344:22:5","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"poolId","nameLocation":"7372:6:5","nodeType":"VariableDeclaration","scope":1471,"src":"7367:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint","nodeType":"ElementaryTypeName","src":"7367:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7366:13:5"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1471,"src":"7401:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint","nodeType":"ElementaryTypeName","src":"7401:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7400:6:5"},"scope":1481,"src":"7335:150:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1479,"nodeType":"Block","src":"7640:32:5","statements":[{"expression":{"id":1477,"name":"whales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"7658:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1476,"id":1478,"nodeType":"Return","src":"7651:13:5"}]},"functionSelector":"ca593db0","id":1480,"implemented":true,"kind":"function","modifiers":[],"name":"checkWhaleWallets","nameLocation":"7581:17:5","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[],"src":"7598:2:5"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1480,"src":"7622:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"7622:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1474,"nodeType":"ArrayTypeName","src":"7622:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7621:18:5"},"scope":1481,"src":"7572:100:5","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1482,"src":"120:7555:5","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"33:7644:5"},"id":5}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/YieldFarming.sol":{"YieldFarming":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"yieldPercent","type":"uint256"},{"internalType":"uint256","name":"minDeposit","type":"uint256"},{"internalType":"uint256","name":"rewardTime","type":"uint256"}],"name":"addPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"checkClaimableRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"checkPoolDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"checkRemainingCapacity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"checkUserDepositInPool","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"checkUserDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkWhaleWallets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"depositWei","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawWei","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_869":{"entryPoint":null,"id":869,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":316,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":482,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":565,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":422,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:6"},"nodeType":"YulFunctionCall","src":"66:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:6"},"nodeType":"YulFunctionCall","src":"56:31:6"},"nodeType":"YulExpressionStatement","src":"56:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:6"},"nodeType":"YulFunctionCall","src":"96:15:6"},"nodeType":"YulExpressionStatement","src":"96:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:6"},"nodeType":"YulFunctionCall","src":"120:15:6"},"nodeType":"YulExpressionStatement","src":"120:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:6"},{"body":{"nodeType":"YulBlock","src":"210:776:6","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:6"},"nodeType":"YulFunctionCall","src":"261:12:6"},"nodeType":"YulExpressionStatement","src":"261:12:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:6"},"nodeType":"YulFunctionCall","src":"234:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:6"},"nodeType":"YulFunctionCall","src":"230:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:6"},"nodeType":"YulFunctionCall","src":"223:35:6"},"nodeType":"YulIf","src":"220:55:6"},{"nodeType":"YulVariableDeclaration","src":"284:23:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:6"},"nodeType":"YulFunctionCall","src":"294:13:6"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:6","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:6","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:6"},"nodeType":"YulFunctionCall","src":"330:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:6"},"nodeType":"YulFunctionCall","src":"326:18:6"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:6"},"nodeType":"YulFunctionCall","src":"369:18:6"},"nodeType":"YulExpressionStatement","src":"369:18:6"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:6"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:6"},"nodeType":"YulFunctionCall","src":"356:10:6"},"nodeType":"YulIf","src":"353:36:6"},{"nodeType":"YulVariableDeclaration","src":"398:17:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:6"},"nodeType":"YulFunctionCall","src":"408:7:6"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:6"},"nodeType":"YulFunctionCall","src":"438:9:6"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:6"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:6"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:6"},"nodeType":"YulFunctionCall","src":"498:13:6"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:6"},"nodeType":"YulFunctionCall","src":"494:22:6"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:6","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:6"},"nodeType":"YulFunctionCall","src":"490:31:6"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:6"},"nodeType":"YulFunctionCall","src":"486:40:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:6"},"nodeType":"YulFunctionCall","src":"474:53:6"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:6"},"nodeType":"YulFunctionCall","src":"588:18:6"},"nodeType":"YulExpressionStatement","src":"588:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:6"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:6"},"nodeType":"YulFunctionCall","src":"542:18:6"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:6"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:6"},"nodeType":"YulFunctionCall","src":"562:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:6"},"nodeType":"YulFunctionCall","src":"539:46:6"},"nodeType":"YulIf","src":"536:72:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:6","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:6"},"nodeType":"YulFunctionCall","src":"617:22:6"},"nodeType":"YulExpressionStatement","src":"617:22:6"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:6"},"nodeType":"YulFunctionCall","src":"648:18:6"},"nodeType":"YulExpressionStatement","src":"648:18:6"},{"nodeType":"YulVariableDeclaration","src":"675:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:6","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:6"},"nodeType":"YulFunctionCall","src":"737:12:6"},"nodeType":"YulExpressionStatement","src":"737:12:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:6"},"nodeType":"YulFunctionCall","src":"708:15:6"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:6"},"nodeType":"YulFunctionCall","src":"704:24:6"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:6"},"nodeType":"YulFunctionCall","src":"701:33:6"},"nodeType":"YulIf","src":"698:53:6"},{"nodeType":"YulVariableDeclaration","src":"760:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:6"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:6"},"nodeType":"YulFunctionCall","src":"850:14:6"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:6"},"nodeType":"YulFunctionCall","src":"846:23:6"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:6"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:6"},"nodeType":"YulFunctionCall","src":"881:14:6"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:6"},"nodeType":"YulFunctionCall","src":"877:23:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:6"},"nodeType":"YulFunctionCall","src":"871:30:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:6"},"nodeType":"YulFunctionCall","src":"839:63:6"},"nodeType":"YulExpressionStatement","src":"839:63:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:6"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:6"},"nodeType":"YulFunctionCall","src":"787:9:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:6","statements":[{"nodeType":"YulAssignment","src":"799:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:6"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:6"},"nodeType":"YulFunctionCall","src":"804:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:6","statements":[]},"src":"779:133:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:6"},"nodeType":"YulFunctionCall","src":"932:15:6"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:6"},"nodeType":"YulFunctionCall","src":"928:24:6"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:6"},"nodeType":"YulFunctionCall","src":"921:35:6"},"nodeType":"YulExpressionStatement","src":"921:35:6"},{"nodeType":"YulAssignment","src":"965:15:6","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:6"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:6","type":""}],"src":"146:840:6"},{"body":{"nodeType":"YulBlock","src":"1109:444:6","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:6"},"nodeType":"YulFunctionCall","src":"1157:12:6"},"nodeType":"YulExpressionStatement","src":"1157:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:6"},"nodeType":"YulFunctionCall","src":"1126:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:6"},"nodeType":"YulFunctionCall","src":"1122:32:6"},"nodeType":"YulIf","src":"1119:52:6"},{"nodeType":"YulVariableDeclaration","src":"1180:30:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:6"},"nodeType":"YulFunctionCall","src":"1194:16:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:6","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:6","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:6"},"nodeType":"YulFunctionCall","src":"1233:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:6"},"nodeType":"YulFunctionCall","src":"1229:18:6"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:6"},"nodeType":"YulFunctionCall","src":"1276:12:6"},"nodeType":"YulExpressionStatement","src":"1276:12:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:6"},"nodeType":"YulFunctionCall","src":"1259:14:6"},"nodeType":"YulIf","src":"1256:34:6"},{"nodeType":"YulAssignment","src":"1299:71:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:6"},"nodeType":"YulFunctionCall","src":"1338:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:6"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:6"},"nodeType":"YulFunctionCall","src":"1309:61:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:6"},"nodeType":"YulFunctionCall","src":"1401:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:6"},"nodeType":"YulFunctionCall","src":"1395:25:6"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:6"},"nodeType":"YulFunctionCall","src":"1451:12:6"},"nodeType":"YulExpressionStatement","src":"1451:12:6"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:6"},"nodeType":"YulFunctionCall","src":"1432:16:6"},"nodeType":"YulIf","src":"1429:36:6"},{"nodeType":"YulAssignment","src":"1474:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:6"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:6"},"nodeType":"YulFunctionCall","src":"1513:24:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:6"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:6"},"nodeType":"YulFunctionCall","src":"1484:63:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:6"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:6","type":""}],"src":"991:562:6"},{"body":{"nodeType":"YulBlock","src":"1613:325:6","statements":[{"nodeType":"YulAssignment","src":"1623:22:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:6","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:6"},"nodeType":"YulFunctionCall","src":"1633:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:6"},"nodeType":"YulFunctionCall","src":"1680:12:6"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:6","statements":[{"nodeType":"YulAssignment","src":"1733:27:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:6","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:6"},"nodeType":"YulFunctionCall","src":"1743:17:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:6"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:6"},"nodeType":"YulFunctionCall","src":"1704:26:6"},"nodeType":"YulIf","src":"1701:61:6"},{"body":{"nodeType":"YulBlock","src":"1821:111:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:6"},"nodeType":"YulFunctionCall","src":"1845:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:6"},"nodeType":"YulFunctionCall","src":"1835:31:6"},"nodeType":"YulExpressionStatement","src":"1835:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:6","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:6"},"nodeType":"YulFunctionCall","src":"1879:15:6"},"nodeType":"YulExpressionStatement","src":"1879:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:6"},"nodeType":"YulFunctionCall","src":"1907:15:6"},"nodeType":"YulExpressionStatement","src":"1907:15:6"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:6"},"nodeType":"YulFunctionCall","src":"1797:14:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:6"},"nodeType":"YulFunctionCall","src":"1774:38:6"},"nodeType":"YulIf","src":"1771:161:6"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:6","type":""}],"src":"1558:380:6"},{"body":{"nodeType":"YulBlock","src":"1999:65:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:6","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:6"},"nodeType":"YulFunctionCall","src":"2009:14:6"},"nodeType":"YulExpressionStatement","src":"2009:14:6"},{"nodeType":"YulAssignment","src":"2032:26:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:6"},"nodeType":"YulFunctionCall","src":"2040:18:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:6"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:6","type":""}],"src":"1943:121:6"},{"body":{"nodeType":"YulBlock","src":"2150:464:6","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:6","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:6","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:6"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:6"},"nodeType":"YulFunctionCall","src":"2221:17:6"},"nodeType":"YulExpressionStatement","src":"2221:17:6"},{"nodeType":"YulVariableDeclaration","src":"2251:31:6","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:6"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:6"},"nodeType":"YulFunctionCall","src":"2263:19:6"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:6","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:6"},"nodeType":"YulFunctionCall","src":"2331:19:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:6"},"nodeType":"YulFunctionCall","src":"2324:27:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:6"},"nodeType":"YulFunctionCall","src":"2314:38:6"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:6","statements":[{"nodeType":"YulAssignment","src":"2391:19:6","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:6"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:6"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:6","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:6"},"nodeType":"YulFunctionCall","src":"2368:20:6"},"nodeType":"YulIf","src":"2365:47:6"},{"nodeType":"YulVariableDeclaration","src":"2425:41:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:6","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:6"},"nodeType":"YulFunctionCall","src":"2452:12:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:6"},"nodeType":"YulFunctionCall","src":"2445:20:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:6"},"nodeType":"YulFunctionCall","src":"2435:31:6"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:6","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:6"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:6","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:6"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:6"},"nodeType":"YulFunctionCall","src":"2579:17:6"},"nodeType":"YulExpressionStatement","src":"2579:17:6"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:6"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:6"},"nodeType":"YulFunctionCall","src":"2524:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:6","statements":[{"nodeType":"YulAssignment","src":"2540:22:6","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:6"},"nodeType":"YulFunctionCall","src":"2549:13:6"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:6"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:6","statements":[]},"src":"2516:82:6"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:6"},"nodeType":"YulFunctionCall","src":"2163:11:6"},"nodeType":"YulIf","src":"2160:448:6"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:6","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:6","type":""}],"src":"2069:545:6"},{"body":{"nodeType":"YulBlock","src":"2704:81:6","statements":[{"nodeType":"YulAssignment","src":"2714:65:6","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:6"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:6","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:6"},"nodeType":"YulFunctionCall","src":"2743:11:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:6"},"nodeType":"YulFunctionCall","src":"2756:6:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:6"},"nodeType":"YulFunctionCall","src":"2739:24:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:6"},"nodeType":"YulFunctionCall","src":"2735:29:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:6"},"nodeType":"YulFunctionCall","src":"2725:40:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:6","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:6"},"nodeType":"YulFunctionCall","src":"2767:11:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:6"},"nodeType":"YulFunctionCall","src":"2722:57:6"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:6"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:6","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:6","type":""}],"src":"2619:166:6"},{"body":{"nodeType":"YulBlock","src":"2886:1256:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:6","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:6"},"nodeType":"YulFunctionCall","src":"2910:10:6"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:6"},"nodeType":"YulFunctionCall","src":"2965:18:6"},"nodeType":"YulExpressionStatement","src":"2965:18:6"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:6","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:6"},"nodeType":"YulFunctionCall","src":"2947:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:6"},"nodeType":"YulFunctionCall","src":"2943:18:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:6"},"nodeType":"YulFunctionCall","src":"2932:30:6"},"nodeType":"YulIf","src":"2929:56:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:6"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:6"},"nodeType":"YulFunctionCall","src":"3070:11:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:6"},"nodeType":"YulFunctionCall","src":"3044:38:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:6"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:6"},"nodeType":"YulFunctionCall","src":"2994:97:6"},"nodeType":"YulExpressionStatement","src":"2994:97:6"},{"nodeType":"YulVariableDeclaration","src":"3100:18:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:6","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:6","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:6","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:6","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:6"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:6","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:6"},"nodeType":"YulFunctionCall","src":"3270:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:6"},"nodeType":"YulFunctionCall","src":"3258:20:6"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:6","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:6"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:6"},"nodeType":"YulFunctionCall","src":"3305:35:6"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:6","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:6"},"nodeType":"YulFunctionCall","src":"3479:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:6"},"nodeType":"YulFunctionCall","src":"3473:26:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:6"},"nodeType":"YulFunctionCall","src":"3458:42:6"},"nodeType":"YulExpressionStatement","src":"3458:42:6"},{"nodeType":"YulAssignment","src":"3517:24:6","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:6"},"nodeType":"YulFunctionCall","src":"3527:14:6"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:6"}]},{"nodeType":"YulAssignment","src":"3558:40:6","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:6"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:6"},"nodeType":"YulFunctionCall","src":"3571:27:6"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:6"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:6"},"nodeType":"YulFunctionCall","src":"3384:14:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:6","statements":[{"nodeType":"YulAssignment","src":"3401:24:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:6"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:6"},"nodeType":"YulFunctionCall","src":"3406:19:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:6","statements":[]},"src":"3376:236:6"},{"body":{"nodeType":"YulBlock","src":"3660:166:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:6"},"nodeType":"YulFunctionCall","src":"3701:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:6"},"nodeType":"YulFunctionCall","src":"3695:26:6"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:6","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:6"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:6"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:6","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:6"},"nodeType":"YulFunctionCall","src":"3780:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:6","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:6"},"nodeType":"YulFunctionCall","src":"3776:24:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:6"},"nodeType":"YulFunctionCall","src":"3802:6:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:6"},"nodeType":"YulFunctionCall","src":"3772:37:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:6"},"nodeType":"YulFunctionCall","src":"3768:42:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:6"},"nodeType":"YulFunctionCall","src":"3753:58:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:6"},"nodeType":"YulFunctionCall","src":"3738:74:6"},"nodeType":"YulExpressionStatement","src":"3738:74:6"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:6"},"nodeType":"YulFunctionCall","src":"3628:19:6"},"nodeType":"YulIf","src":"3625:201:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:6","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:6"},"nodeType":"YulFunctionCall","src":"3856:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:6"},"nodeType":"YulFunctionCall","src":"3852:22:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:6"},"nodeType":"YulFunctionCall","src":"3839:36:6"},"nodeType":"YulExpressionStatement","src":"3839:36:6"}]},"nodeType":"YulCase","src":"3222:663:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:6","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:6","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:6","statements":[{"nodeType":"YulAssignment","src":"3983:35:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:6"},"nodeType":"YulFunctionCall","src":"3998:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:6"},"nodeType":"YulFunctionCall","src":"3992:26:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:6"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:6"},"nodeType":"YulIf","src":"3943:89:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:6"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:6"},"nodeType":"YulFunctionCall","src":"4058:67:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:6"},"nodeType":"YulFunctionCall","src":"4045:81:6"},"nodeType":"YulExpressionStatement","src":"4045:81:6"}]},"nodeType":"YulCase","src":"3894:242:6","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:6"},"nodeType":"YulFunctionCall","src":"3199:14:6"},"nodeType":"YulSwitch","src":"3192:944:6"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:6","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:6","type":""}],"src":"2790:1352:6"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526127106006553480156200001757600080fd5b506040516200191f3803806200191f8339810160408190526200003a916200013c565b818160036200004a838262000235565b50600462000059828262000235565b5050600580546001600160a01b031916331790555062000301915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009f57600080fd5b81516001600160401b0380821115620000bc57620000bc62000077565b604051601f8301601f19908116603f01168101908282118183101715620000e757620000e762000077565b816040528381526020925086838588010111156200010457600080fd5b600091505b8382101562000128578582018301518183018401529082019062000109565b600093810190920192909252949350505050565b600080604083850312156200015057600080fd5b82516001600160401b03808211156200016857600080fd5b62000176868387016200008d565b935060208501519150808211156200018d57600080fd5b506200019c858286016200008d565b9150509250929050565b600181811c90821680620001bb57607f821691505b602082108103620001dc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023057600081815260208120601f850160051c810160208610156200020b5750805b601f850160051c820191505b818110156200022c5782815560010162000217565b5050505b505050565b81516001600160401b0381111562000251576200025162000077565b6200026981620002628454620001a6565b84620001e2565b602080601f831160018114620002a15760008415620002885750858301515b600019600386901b1c1916600185901b1785556200022c565b600085815260208120601f198616915b82811015620002d257888601518255948401946001909101908401620002b1565b5085821015620002f15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61160e80620003116000396000f3fe60806040526004361061015f5760003560e01c806395d89b41116100c0578063c94c178b11610074578063dd62ed3e11610059578063dd62ed3e1461041d578063e0ebf61a14610463578063f3bc21b91461048357600080fd5b8063c94c178b146103cd578063ca593db0146103fb57600080fd5b8063a8376b3c116100a5578063a8376b3c1461036d578063a9059cbb1461038d578063b7c7c4e0146103ad57600080fd5b806395d89b4114610345578063a3f81da01461035a57600080fd5b8063313ce5671161011757806370a08231116100fc57806370a08231146102715780638da5cb5b146102a75780638fb0a9f4146102df57600080fd5b8063313ce5671461022057806331d982371461023c57600080fd5b80630962ef79116101485780630962ef79146101bf57806318160ddd146101e157806323b872dd1461020057600080fd5b806306fdde0314610164578063095ea7b31461018f575b600080fd5b34801561017057600080fd5b506101796104a3565b60405161018691906111dd565b60405180910390f35b34801561019b57600080fd5b506101af6101aa366004611247565b610535565b6040519015158152602001610186565b3480156101cb57600080fd5b506101df6101da366004611271565b61054f565b005b3480156101ed57600080fd5b506002545b604051908152602001610186565b34801561020c57600080fd5b506101af61021b36600461128a565b610627565b34801561022c57600080fd5b5060405160128152602001610186565b34801561024857600080fd5b5061025c6102573660046112c6565b61064b565b60408051928352602083019190915201610186565b34801561027d57600080fd5b506101f261028c3660046112c6565b6001600160a01b031660009081526020819052604090205490565b3480156102b357600080fd5b506005546102c7906001600160a01b031681565b6040516001600160a01b039091168152602001610186565b3480156102eb57600080fd5b506103256102fa366004611271565b6000908152600b60205260409020600181015460028201546003830154600490930154919390929190565b604080519485526020850193909352918301526060820152608001610186565b34801561035157600080fd5b50610179610758565b6101df610368366004611271565b610767565b34801561037957600080fd5b506101df6103883660046112e8565b610984565b34801561039957600080fd5b506101af6103a8366004611247565b610ae1565b3480156103b957600080fd5b506101df6103c836600461130a565b610aef565b3480156103d957600080fd5b506103ed6103e8366004611271565b610c25565b604051610186929190611380565b34801561040757600080fd5b50610410610d8a565b60405161018691906113d7565b34801561042957600080fd5b506101f26104383660046113ea565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561046f57600080fd5b506101f261047e366004611271565b610deb565b34801561048f57600080fd5b506101f261049e366004611271565b610e9b565b6060600380546104b29061141d565b80601f01602080910402602001604051908101604052809291908181526020018280546104de9061141d565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b5050505050905090565b600033610543818585610ebe565b60019150505b92915050565b600061055a82610deb565b9050600081116105b15760405162461bcd60e51b815260206004820152600a60248201527f6e6f20726577617264730000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b3360009081526008602052604090205460ff16156105e35760646105d682607861146d565b6105e09190611484565b90505b6000828152600b6020908152604080832033808552600690910190925290912042600190910155600554610623916001600160a01b039091169083610ecb565b5050565b600033610635858285610ff5565b610640858585611073565b506001949350505050565b6000806000805b600a54811015610737576000818152600b602090815260408083206001600160a01b038916845260060190915281206001015461068f90426114a6565b6000838152600b6020526040812060040154919250906106af9083611484565b6000848152600b6020526040812060020154919250906106d090839061146d565b6000858152600b602090815260408083206001600160a01b038d1684526006019091528120549192509060649061070890849061146d565b6107129190611484565b905061071e81876114b9565b955050505050808061072f906114cc565b915050610652565b506001600160a01b0390931660009081526009602052604090205493915050565b6060600480546104b29061141d565b6000818152600b602052604090206003015434116107c75760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e74204465706f73697400000000000000000000000060448201526064016105a8565b6000818152600b60205260409020600501546107e390346114b9565b6000828152600b602052604090206001015410156108435760405162461bcd60e51b815260206004820152601260248201527f6d6178206c696d6974206578636565646564000000000000000000000000000060448201526064016105a8565b6000818152600b6020526040812060050180543492906108649084906114b9565b909155505033600090815260096020526040812080543492906108889084906114b9565b90915550506000818152600b6020818152604080842033808652600682018452828620348155426001918201558254808852600784018652938720805473ffffffffffffffffffffffffffffffffffffffff19169092179091558686529390925281549093906108f99084906114b9565b909155505060065433600090815260096020526040902054111561062357336000818152600860205260408120805460ff191660019081179091556007805491820181559091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801805473ffffffffffffffffffffffffffffffffffffffff191690911790555050565b6000828152600b602090815260408083203384526006019091529020546109ed5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e742066756e6473000000000000000000000000000060448201526064016105a8565b6000828152600b6020908152604080832033845260060190915281208054839290610a199084906114a6565b90915550506000828152600b602052604081206005018054839290610a3f9084906114a6565b90915550503360009081526009602052604081208054839290610a639084906114a6565b90915550506000828152600b602090815260408083203384526006019091528120549003610aaf576000828152600b602090815260408083203384526006019091529020426001909101555b604051339082156108fc029083906000818181858888f19350505050158015610adc573d6000803e3d6000fd5b505050565b600033610543818585611073565b6005546001600160a01b03163314610b535760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016105a8565b838210610ba25760405162461bcd60e51b815260206004820152601b60248201527f6d696e2073686f756c64206265206c657373207468616e206d6178000000000060448201526064016105a8565b610bc133610bb26002600a6115c9565b610bbc908761146d565b6110d2565b600a80546000908152600b602052604080822060010187905582548252808220600201869055825482528082206003018590558254825280822060040184905582548252812060050181905581549190610c1a836114cc565b919050555050505050565b6000818152600b60205260408120546060918291908167ffffffffffffffff811115610c5357610c536115d5565b604051908082528060200260200182016040528015610c7c578160200160208202803683370190505b50905060008267ffffffffffffffff811115610c9a57610c9a6115d5565b604051908082528060200260200182016040528015610cc3578160200160208202803683370190505b50905060005b83811015610d7e576000878152600b6020908152604080832084845260070190915290205483516001600160a01b03909116908190859084908110610d1057610d106115eb565b6001600160a01b0392831660209182029290920181019190915260008a8152600b8252604080822093851682526006909301909152205483518190859085908110610d5d57610d5d6115eb565b60200260200101818152505050508080610d76906114cc565b915050610cc9565b50909590945092505050565b6060600780548060200260200160405190810160405280929190818152602001828054801561052b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dc4575050505050905090565b6000818152600b602090815260408083203384526006019091528120600101548190610e1790426114a6565b6000848152600b602052604081206004015491925090610e379083611484565b6000858152600b602052604081206002015491925090610e5890839061146d565b6000868152600b6020908152604080832033845260060190915281205491925090606490610e8790849061146d565b610e919190611484565b9695505050505050565b6000818152600b60205260408120600581015460019091015461054991906114a6565b610adc8383836001611108565b6001600160a01b038316610ef6578060026000828254610eeb91906114b9565b90915550610f689050565b6001600160a01b03831660009081526020819052604090205481811015610f495760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105a8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610f8457600280548290039055610fa3565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fe891815260200190565b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461106d578181101561105e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105a8565b61106d84848484036000611108565b50505050565b6001600160a01b03831661109d57604051634b637e8f60e11b8152600060048201526024016105a8565b6001600160a01b0382166110c75760405163ec442f0560e01b8152600060048201526024016105a8565b610adc838383610ecb565b6001600160a01b0382166110fc5760405163ec442f0560e01b8152600060048201526024016105a8565b61062360008383610ecb565b6001600160a01b0384166111325760405163e602df0560e01b8152600060048201526024016105a8565b6001600160a01b03831661115c57604051634a1406b160e11b8152600060048201526024016105a8565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561106d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111cf91815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561120a578581018301518582016040015282016111ee565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461124257600080fd5b919050565b6000806040838503121561125a57600080fd5b6112638361122b565b946020939093013593505050565b60006020828403121561128357600080fd5b5035919050565b60008060006060848603121561129f57600080fd5b6112a88461122b565b92506112b66020850161122b565b9150604084013590509250925092565b6000602082840312156112d857600080fd5b6112e18261122b565b9392505050565b600080604083850312156112fb57600080fd5b50508035926020909101359150565b6000806000806080858703121561132057600080fd5b5050823594602084013594506040840135936060013592509050565b600081518084526020808501945080840160005b838110156113755781516001600160a01b031687529582019590820190600101611350565b509495945050505050565b604081526000611393604083018561133c565b82810360208481019190915284518083528582019282019060005b818110156113ca578451835293830193918301916001016113ae565b5090979650505050505050565b6020815260006112e1602083018461133c565b600080604083850312156113fd57600080fd5b6114068361122b565b91506114146020840161122b565b90509250929050565b600181811c9082168061143157607f821691505b60208210810361145157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761054957610549611457565b6000826114a157634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561054957610549611457565b8082018082111561054957610549611457565b6000600182016114de576114de611457565b5060010190565b600181815b8085111561152057816000190482111561150657611506611457565b8085161561151357918102915b93841c93908002906114ea565b509250929050565b60008261153757506001610549565b8161154457506000610549565b816001811461155a576002811461156457611580565b6001915050610549565b60ff84111561157557611575611457565b50506001821b610549565b5060208310610133831016604e8410600b84101617156115a3575081810a610549565b6115ad83836114e5565b80600019048211156115c1576115c1611457565b029392505050565b60006112e18383611528565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2710 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x191F CODESIZE SUB DUP1 PUSH3 0x191F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3A SWAP2 PUSH3 0x13C JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH3 0x4A DUP4 DUP3 PUSH3 0x235 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x59 DUP3 DUP3 PUSH3 0x235 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP PUSH3 0x301 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xBC JUMPI PUSH3 0xBC PUSH3 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xE7 JUMPI PUSH3 0xE7 PUSH3 0x77 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x128 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x109 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x176 DUP7 DUP4 DUP8 ADD PUSH3 0x8D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x19C DUP6 DUP3 DUP7 ADD PUSH3 0x8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1BB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x230 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x20B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x22C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x217 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x251 JUMPI PUSH3 0x251 PUSH3 0x77 JUMP JUMPDEST PUSH3 0x269 DUP2 PUSH3 0x262 DUP5 SLOAD PUSH3 0x1A6 JUMP JUMPDEST DUP5 PUSH3 0x1E2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2A1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x288 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x22C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2D2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2B1 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2F1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x160E DUP1 PUSH3 0x311 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x15F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC94C178B GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xE0EBF61A EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0xF3BC21B9 EQ PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC94C178B EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xCA593DB0 EQ PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8376B3C GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA8376B3C EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xB7C7C4E0 EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xA3F81DA0 EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8FB0A9F4 EQ PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x31D98237 EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x962EF79 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x962EF79 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2C7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x130A JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0xDEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x141D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x141D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x500 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x50E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x543 DUP2 DUP6 DUP6 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55A DUP3 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F207265776172647300000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x64 PUSH2 0x5D6 DUP3 PUSH1 0x78 PUSH2 0x146D JUMP JUMPDEST PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x5 SLOAD PUSH2 0x623 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xECB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x635 DUP6 DUP3 DUP6 PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x640 DUP6 DUP6 DUP6 PUSH2 0x1073 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x68F SWAP1 TIMESTAMP PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x6AF SWAP1 DUP4 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x6D0 SWAP1 DUP4 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x708 SWAP1 DUP5 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP PUSH2 0x71E DUP2 DUP8 PUSH2 0x14B9 JUMP JUMPDEST SWAP6 POP POP POP POP POP DUP1 DUP1 PUSH2 0x72F SWAP1 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x652 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x141D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD CALLVALUE GT PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204465706F736974000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x7E3 SWAP1 CALLVALUE PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6178206C696D69742065786365656465640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x864 SWAP1 DUP5 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x888 SWAP1 DUP5 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP1 DUP7 MSTORE PUSH1 0x6 DUP3 ADD DUP5 MSTORE DUP3 DUP7 KECCAK256 CALLVALUE DUP2 SSTORE TIMESTAMP PUSH1 0x1 SWAP2 DUP3 ADD SSTORE DUP3 SLOAD DUP1 DUP9 MSTORE PUSH1 0x7 DUP5 ADD DUP7 MSTORE SWAP4 DUP8 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP7 DUP7 MSTORE SWAP4 SWAP1 SWAP3 MSTORE DUP2 SLOAD SWAP1 SWAP4 SWAP1 PUSH2 0x8F9 SWAP1 DUP5 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x623 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA19 SWAP1 DUP5 SWAP1 PUSH2 0x14A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA3F SWAP1 DUP5 SWAP1 PUSH2 0x14A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA63 SWAP1 DUP5 SWAP1 PUSH2 0x14A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xAAF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x543 DUP2 DUP6 DUP6 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A8 JUMP JUMPDEST DUP4 DUP3 LT PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E2073686F756C64206265206C657373207468616E206D61780000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0xBC1 CALLER PUSH2 0xBB2 PUSH1 0x2 PUSH1 0xA PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0xBBC SWAP1 DUP8 PUSH2 0x146D JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP8 SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP7 SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD DUP6 SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x4 ADD DUP5 SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP2 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0xC1A DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC53 PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC7C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9A JUMPI PUSH2 0xC9A PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCC3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD7E JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x7 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xD10 JUMPI PUSH2 0xD10 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xB DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 DUP6 AND DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 ADD SWAP1 SWAP2 MSTORE KECCAK256 SLOAD DUP4 MLOAD DUP2 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xD5D JUMPI PUSH2 0xD5D PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xD76 SWAP1 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCC9 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDC4 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0xE17 SWAP1 TIMESTAMP PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xE37 SWAP1 DUP4 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xE58 SWAP1 DUP4 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x64 SWAP1 PUSH2 0xE87 SWAP1 DUP5 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0xADC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEF6 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF68 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF84 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFE8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x106D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x105E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x106D DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1108 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0xADC DUP4 DUP4 DUP4 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10FC JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x623 PUSH1 0x0 DUP4 DUP4 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x106D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11CF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x120A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x11EE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1263 DUP4 PUSH2 0x122B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A8 DUP5 PUSH2 0x122B JUMP JUMPDEST SWAP3 POP PUSH2 0x12B6 PUSH1 0x20 DUP6 ADD PUSH2 0x122B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E1 DUP3 PUSH2 0x122B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1375 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1350 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1393 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x133C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP4 MSTORE DUP6 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13CA JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13AE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1406 DUP4 PUSH2 0x122B JUMP JUMPDEST SWAP2 POP PUSH2 0x1414 PUSH1 0x20 DUP5 ADD PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1431 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1451 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x1457 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x14DE JUMPI PUSH2 0x14DE PUSH2 0x1457 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1520 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1506 PUSH2 0x1457 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1513 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x14EA JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1537 JUMPI POP PUSH1 0x1 PUSH2 0x549 JUMP JUMPDEST DUP2 PUSH2 0x1544 JUMPI POP PUSH1 0x0 PUSH2 0x549 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x155A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1564 JUMPI PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x549 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1575 JUMPI PUSH2 0x1575 PUSH2 0x1457 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x549 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x15A3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x549 JUMP JUMPDEST PUSH2 0x15AD DUP4 DUP4 PUSH2 0x14E5 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x15C1 JUMPI PUSH2 0x15C1 PUSH2 0x1457 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E1 DUP4 DUP4 PUSH2 0x1528 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"120:7555:5:-:0;;;207:9;185:31;;854:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;914:4;920:6;1962:5:1;:13;914:4:5;1962:5:1;:13;:::i;:::-;-1:-1:-1;1985:7:1;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;939:5:5::1;:18:::0;;-1:-1:-1;;;;;;939:18:5::1;947:10;939:18;::::0;;-1:-1:-1;120:7555:5;;-1:-1:-1;;120:7555:5;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:6:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:6;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:6;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:6;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:6;;;3992:26;3943:89;-1:-1:-1;;2747:1:6;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:6;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:6;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:6;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:6:o;:::-;120:7555:5;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":3774,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":4360,"id":602,"parameterSlots":4,"returnSlots":0},"@_mint_491":{"entryPoint":4306,"id":491,"parameterSlots":2,"returnSlots":0},"@_msgSender_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_650":{"entryPoint":4085,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":4211,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":3787,"id":458,"parameterSlots":3,"returnSlots":0},"@addPool_941":{"entryPoint":2799,"id":941,"parameterSlots":4,"returnSlots":0},"@allowance_278":{"entryPoint":null,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":1333,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":null,"id":237,"parameterSlots":1,"returnSlots":1},"@checkClaimableRewards_1453":{"entryPoint":3563,"id":1453,"parameterSlots":1,"returnSlots":1},"@checkPoolDetails_1225":{"entryPoint":null,"id":1225,"parameterSlots":1,"returnSlots":4},"@checkRemainingCapacity_1471":{"entryPoint":3739,"id":1471,"parameterSlots":1,"returnSlots":1},"@checkUserDepositInPool_1395":{"entryPoint":3109,"id":1395,"parameterSlots":1,"returnSlots":2},"@checkUserDeposits_1307":{"entryPoint":1611,"id":1307,"parameterSlots":1,"returnSlots":2},"@checkWhaleWallets_1480":{"entryPoint":3466,"id":1480,"parameterSlots":0,"returnSlots":1},"@claimRewards_1193":{"entryPoint":1359,"id":1193,"parameterSlots":1,"returnSlots":0},"@decimals_215":{"entryPoint":null,"id":215,"parameterSlots":0,"returnSlots":1},"@depositWei_1060":{"entryPoint":1895,"id":1060,"parameterSlots":1,"returnSlots":0},"@name_197":{"entryPoint":1187,"id":197,"parameterSlots":0,"returnSlots":1},"@owner_792":{"entryPoint":null,"id":792,"parameterSlots":0,"returnSlots":0},"@symbol_206":{"entryPoint":1880,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":null,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":1575,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":2785,"id":261,"parameterSlots":2,"returnSlots":1},"@withdrawWei_1140":{"entryPoint":2436,"id":1140,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":4651,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4806,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5098,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4746,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4679,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":4840,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256":{"entryPoint":4874,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_array_address_dyn":{"entryPoint":4924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5079,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4992,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4573,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_256ba5c174baaeb521b2e7aa542991d69ad896f2091eb3ab87dfa8c88f77f7df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5363af03e03c9fa33635a23e559baa409daf2be12a3bbb8308c387e9527b6660__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d7d4657f1e5c346169e33cfd4ee94460b0279d85f82631dbf0b0dfbfdb665b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8f1a03a73967bd0630d11134aa7813e413618859a043f2c49b19c7944b8b70d0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5305,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5252,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":5349,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":5577,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":5416,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5229,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5286,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5149,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":5324,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5207,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5611,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5589,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11114:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:6","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:6","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:6","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:6","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:6"},"nodeType":"YulFunctionCall","src":"166:21:6"},"nodeType":"YulExpressionStatement","src":"166:21:6"},{"nodeType":"YulVariableDeclaration","src":"196:27:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:6"},"nodeType":"YulFunctionCall","src":"210:13:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:6"},"nodeType":"YulFunctionCall","src":"239:18:6"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:6"},"nodeType":"YulFunctionCall","src":"232:34:6"},"nodeType":"YulExpressionStatement","src":"232:34:6"},{"nodeType":"YulVariableDeclaration","src":"275:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:6"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:6"},"nodeType":"YulFunctionCall","src":"369:17:6"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:6"},"nodeType":"YulFunctionCall","src":"365:26:6"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:6"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:6"},"nodeType":"YulFunctionCall","src":"403:14:6"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:6"},"nodeType":"YulFunctionCall","src":"399:23:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:6"},"nodeType":"YulFunctionCall","src":"393:30:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:6"},"nodeType":"YulFunctionCall","src":"358:66:6"},"nodeType":"YulExpressionStatement","src":"358:66:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:6"},"nodeType":"YulFunctionCall","src":"302:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:6","statements":[{"nodeType":"YulAssignment","src":"318:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:6"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:6"},"nodeType":"YulFunctionCall","src":"323:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:6","statements":[]},"src":"294:140:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:6"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:6"},"nodeType":"YulFunctionCall","src":"454:22:6"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:6"},"nodeType":"YulFunctionCall","src":"450:31:6"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:6"},"nodeType":"YulFunctionCall","src":"443:42:6"},"nodeType":"YulExpressionStatement","src":"443:42:6"},{"nodeType":"YulAssignment","src":"494:62:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:6"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:6"},"nodeType":"YulFunctionCall","src":"525:15:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:6"},"nodeType":"YulFunctionCall","src":"542:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:6"},"nodeType":"YulFunctionCall","src":"521:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:6"},"nodeType":"YulFunctionCall","src":"506:45:6"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:6"},"nodeType":"YulFunctionCall","src":"502:54:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:6"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:6","type":""}],"src":"14:548:6"},{"body":{"nodeType":"YulBlock","src":"616:147:6","statements":[{"nodeType":"YulAssignment","src":"626:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:6"},"nodeType":"YulFunctionCall","src":"635:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:6"}]},{"body":{"nodeType":"YulBlock","src":"741:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"750:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"753:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"743:6:6"},"nodeType":"YulFunctionCall","src":"743:12:6"},"nodeType":"YulExpressionStatement","src":"743:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"695:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:6"},"nodeType":"YulFunctionCall","src":"684:54:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:6"},"nodeType":"YulFunctionCall","src":"674:65:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:6"},"nodeType":"YulFunctionCall","src":"667:73:6"},"nodeType":"YulIf","src":"664:93:6"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:6","type":""}],"src":"567:196:6"},{"body":{"nodeType":"YulBlock","src":"855:167:6","statements":[{"body":{"nodeType":"YulBlock","src":"901:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"910:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"913:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"903:6:6"},"nodeType":"YulFunctionCall","src":"903:12:6"},"nodeType":"YulExpressionStatement","src":"903:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"876:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"885:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"872:3:6"},"nodeType":"YulFunctionCall","src":"872:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"897:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"868:3:6"},"nodeType":"YulFunctionCall","src":"868:32:6"},"nodeType":"YulIf","src":"865:52:6"},{"nodeType":"YulAssignment","src":"926:39:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"955:9:6"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"936:18:6"},"nodeType":"YulFunctionCall","src":"936:29:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"926:6:6"}]},{"nodeType":"YulAssignment","src":"974:42:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1001:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1012:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"997:3:6"},"nodeType":"YulFunctionCall","src":"997:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"984:12:6"},"nodeType":"YulFunctionCall","src":"984:32:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"974:6:6"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"813:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"824:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"836:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"844:6:6","type":""}],"src":"768:254:6"},{"body":{"nodeType":"YulBlock","src":"1122:92:6","statements":[{"nodeType":"YulAssignment","src":"1132:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1144:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1155:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1140:3:6"},"nodeType":"YulFunctionCall","src":"1140:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1132:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1174:9:6"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1199:6:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1192:6:6"},"nodeType":"YulFunctionCall","src":"1192:14:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1185:6:6"},"nodeType":"YulFunctionCall","src":"1185:22:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1167:6:6"},"nodeType":"YulFunctionCall","src":"1167:41:6"},"nodeType":"YulExpressionStatement","src":"1167:41:6"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1091:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1102:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1113:4:6","type":""}],"src":"1027:187:6"},{"body":{"nodeType":"YulBlock","src":"1289:110:6","statements":[{"body":{"nodeType":"YulBlock","src":"1335:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1344:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1347:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1337:6:6"},"nodeType":"YulFunctionCall","src":"1337:12:6"},"nodeType":"YulExpressionStatement","src":"1337:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1310:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1306:3:6"},"nodeType":"YulFunctionCall","src":"1306:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"1331:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1302:3:6"},"nodeType":"YulFunctionCall","src":"1302:32:6"},"nodeType":"YulIf","src":"1299:52:6"},{"nodeType":"YulAssignment","src":"1360:33:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1383:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1370:12:6"},"nodeType":"YulFunctionCall","src":"1370:23:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:6"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1255:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1266:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1278:6:6","type":""}],"src":"1219:180:6"},{"body":{"nodeType":"YulBlock","src":"1505:76:6","statements":[{"nodeType":"YulAssignment","src":"1515:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1527:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1538:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:6"},"nodeType":"YulFunctionCall","src":"1523:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1515:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1557:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"1568:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1550:6:6"},"nodeType":"YulFunctionCall","src":"1550:25:6"},"nodeType":"YulExpressionStatement","src":"1550:25:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1474:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1485:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1496:4:6","type":""}],"src":"1404:177:6"},{"body":{"nodeType":"YulBlock","src":"1690:224:6","statements":[{"body":{"nodeType":"YulBlock","src":"1736:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1745:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1738:6:6"},"nodeType":"YulFunctionCall","src":"1738:12:6"},"nodeType":"YulExpressionStatement","src":"1738:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1711:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1720:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1707:3:6"},"nodeType":"YulFunctionCall","src":"1707:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"1732:2:6","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1703:3:6"},"nodeType":"YulFunctionCall","src":"1703:32:6"},"nodeType":"YulIf","src":"1700:52:6"},{"nodeType":"YulAssignment","src":"1761:39:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1790:9:6"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1771:18:6"},"nodeType":"YulFunctionCall","src":"1771:29:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1761:6:6"}]},{"nodeType":"YulAssignment","src":"1809:48:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1842:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1838:3:6"},"nodeType":"YulFunctionCall","src":"1838:18:6"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1819:18:6"},"nodeType":"YulFunctionCall","src":"1819:38:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1809:6:6"}]},{"nodeType":"YulAssignment","src":"1866:42:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1893:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1904:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1889:3:6"},"nodeType":"YulFunctionCall","src":"1889:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1876:12:6"},"nodeType":"YulFunctionCall","src":"1876:32:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1866:6:6"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1640:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1651:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1663:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1671:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1679:6:6","type":""}],"src":"1586:328:6"},{"body":{"nodeType":"YulBlock","src":"2016:87:6","statements":[{"nodeType":"YulAssignment","src":"2026:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2038:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2049:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2034:3:6"},"nodeType":"YulFunctionCall","src":"2034:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2026:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2068:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2083:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2091:4:6","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2079:3:6"},"nodeType":"YulFunctionCall","src":"2079:17:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2061:6:6"},"nodeType":"YulFunctionCall","src":"2061:36:6"},"nodeType":"YulExpressionStatement","src":"2061:36:6"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1996:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2007:4:6","type":""}],"src":"1919:184:6"},{"body":{"nodeType":"YulBlock","src":"2178:116:6","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:6"},"nodeType":"YulFunctionCall","src":"2226:12:6"},"nodeType":"YulExpressionStatement","src":"2226:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:6"},"nodeType":"YulFunctionCall","src":"2195:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:6"},"nodeType":"YulFunctionCall","src":"2191:32:6"},"nodeType":"YulIf","src":"2188:52:6"},{"nodeType":"YulAssignment","src":"2249:39:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:6"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:6"},"nodeType":"YulFunctionCall","src":"2259:29:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:6"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2144:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2155:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2167:6:6","type":""}],"src":"2108:186:6"},{"body":{"nodeType":"YulBlock","src":"2428:119:6","statements":[{"nodeType":"YulAssignment","src":"2438:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2450:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2446:3:6"},"nodeType":"YulFunctionCall","src":"2446:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2438:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2480:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"2491:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2473:6:6"},"nodeType":"YulFunctionCall","src":"2473:25:6"},"nodeType":"YulExpressionStatement","src":"2473:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2518:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2529:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2514:3:6"},"nodeType":"YulFunctionCall","src":"2514:18:6"},{"name":"value1","nodeType":"YulIdentifier","src":"2534:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2507:6:6"},"nodeType":"YulFunctionCall","src":"2507:34:6"},"nodeType":"YulExpressionStatement","src":"2507:34:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2389:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2400:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2408:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:6","type":""}],"src":"2299:248:6"},{"body":{"nodeType":"YulBlock","src":"2653:125:6","statements":[{"nodeType":"YulAssignment","src":"2663:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2675:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2686:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2671:3:6"},"nodeType":"YulFunctionCall","src":"2671:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2663:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2705:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2720:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2728:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2716:3:6"},"nodeType":"YulFunctionCall","src":"2716:55:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2698:6:6"},"nodeType":"YulFunctionCall","src":"2698:74:6"},"nodeType":"YulExpressionStatement","src":"2698:74:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2622:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2633:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2644:4:6","type":""}],"src":"2552:226:6"},{"body":{"nodeType":"YulBlock","src":"2968:206:6","statements":[{"nodeType":"YulAssignment","src":"2978:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2990:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3001:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2986:3:6"},"nodeType":"YulFunctionCall","src":"2986:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2978:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3021:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"3032:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3014:6:6"},"nodeType":"YulFunctionCall","src":"3014:25:6"},"nodeType":"YulExpressionStatement","src":"3014:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3059:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3070:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3055:3:6"},"nodeType":"YulFunctionCall","src":"3055:18:6"},{"name":"value1","nodeType":"YulIdentifier","src":"3075:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3048:6:6"},"nodeType":"YulFunctionCall","src":"3048:34:6"},"nodeType":"YulExpressionStatement","src":"3048:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3102:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3113:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3098:3:6"},"nodeType":"YulFunctionCall","src":"3098:18:6"},{"name":"value2","nodeType":"YulIdentifier","src":"3118:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3091:6:6"},"nodeType":"YulFunctionCall","src":"3091:34:6"},"nodeType":"YulExpressionStatement","src":"3091:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3145:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3156:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3141:3:6"},"nodeType":"YulFunctionCall","src":"3141:18:6"},{"name":"value3","nodeType":"YulIdentifier","src":"3161:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3134:6:6"},"nodeType":"YulFunctionCall","src":"3134:34:6"},"nodeType":"YulExpressionStatement","src":"3134:34:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2913:9:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2924:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2932:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2940:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2948:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2959:4:6","type":""}],"src":"2783:391:6"},{"body":{"nodeType":"YulBlock","src":"3266:161:6","statements":[{"body":{"nodeType":"YulBlock","src":"3312:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3321:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3324:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3314:6:6"},"nodeType":"YulFunctionCall","src":"3314:12:6"},"nodeType":"YulExpressionStatement","src":"3314:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3287:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3296:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3283:3:6"},"nodeType":"YulFunctionCall","src":"3283:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3308:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3279:3:6"},"nodeType":"YulFunctionCall","src":"3279:32:6"},"nodeType":"YulIf","src":"3276:52:6"},{"nodeType":"YulAssignment","src":"3337:33:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3347:12:6"},"nodeType":"YulFunctionCall","src":"3347:23:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3337:6:6"}]},{"nodeType":"YulAssignment","src":"3379:42:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3406:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3417:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3402:3:6"},"nodeType":"YulFunctionCall","src":"3402:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3389:12:6"},"nodeType":"YulFunctionCall","src":"3389:32:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3379:6:6"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3224:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3235:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3247:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3255:6:6","type":""}],"src":"3179:248:6"},{"body":{"nodeType":"YulBlock","src":"3553:264:6","statements":[{"body":{"nodeType":"YulBlock","src":"3600:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3609:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3612:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3602:6:6"},"nodeType":"YulFunctionCall","src":"3602:12:6"},"nodeType":"YulExpressionStatement","src":"3602:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3574:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3583:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3570:3:6"},"nodeType":"YulFunctionCall","src":"3570:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3595:3:6","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3566:3:6"},"nodeType":"YulFunctionCall","src":"3566:33:6"},"nodeType":"YulIf","src":"3563:53:6"},{"nodeType":"YulAssignment","src":"3625:33:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3648:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3635:12:6"},"nodeType":"YulFunctionCall","src":"3635:23:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3625:6:6"}]},{"nodeType":"YulAssignment","src":"3667:42:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3694:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3705:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3690:3:6"},"nodeType":"YulFunctionCall","src":"3690:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3677:12:6"},"nodeType":"YulFunctionCall","src":"3677:32:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3667:6:6"}]},{"nodeType":"YulAssignment","src":"3718:42:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3745:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3756:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3741:3:6"},"nodeType":"YulFunctionCall","src":"3741:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3728:12:6"},"nodeType":"YulFunctionCall","src":"3728:32:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3718:6:6"}]},{"nodeType":"YulAssignment","src":"3769:42:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3796:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3807:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3792:3:6"},"nodeType":"YulFunctionCall","src":"3792:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3779:12:6"},"nodeType":"YulFunctionCall","src":"3779:32:6"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3769:6:6"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3495:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3506:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3518:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3526:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3534:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3542:6:6","type":""}],"src":"3432:385:6"},{"body":{"nodeType":"YulBlock","src":"3883:423:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3893:26:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3913:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3907:5:6"},"nodeType":"YulFunctionCall","src":"3907:12:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3897:6:6","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3935:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"3940:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3928:6:6"},"nodeType":"YulFunctionCall","src":"3928:19:6"},"nodeType":"YulExpressionStatement","src":"3928:19:6"},{"nodeType":"YulVariableDeclaration","src":"3956:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3966:4:6","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3960:2:6","type":""}]},{"nodeType":"YulAssignment","src":"3979:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3990:3:6"},{"name":"_1","nodeType":"YulIdentifier","src":"3995:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3986:3:6"},"nodeType":"YulFunctionCall","src":"3986:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3979:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"4007:28:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4025:5:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4032:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4021:3:6"},"nodeType":"YulFunctionCall","src":"4021:14:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4011:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4044:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4053:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4048:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"4112:169:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4133:3:6"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4148:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4142:5:6"},"nodeType":"YulFunctionCall","src":"4142:13:6"},{"kind":"number","nodeType":"YulLiteral","src":"4157:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4138:3:6"},"nodeType":"YulFunctionCall","src":"4138:62:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4126:6:6"},"nodeType":"YulFunctionCall","src":"4126:75:6"},"nodeType":"YulExpressionStatement","src":"4126:75:6"},{"nodeType":"YulAssignment","src":"4214:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4225:3:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4230:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4221:3:6"},"nodeType":"YulFunctionCall","src":"4221:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4214:3:6"}]},{"nodeType":"YulAssignment","src":"4246:25:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4260:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4268:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:6"},"nodeType":"YulFunctionCall","src":"4256:15:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4246:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4074:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"4077:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4071:2:6"},"nodeType":"YulFunctionCall","src":"4071:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4085:18:6","statements":[{"nodeType":"YulAssignment","src":"4087:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4096:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"4099:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4092:3:6"},"nodeType":"YulFunctionCall","src":"4092:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4087:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"4067:3:6","statements":[]},"src":"4063:218:6"},{"nodeType":"YulAssignment","src":"4290:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"4297:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4290:3:6"}]}]},"name":"abi_encode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3860:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3867:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3875:3:6","type":""}],"src":"3822:484:6"},{"body":{"nodeType":"YulBlock","src":"4540:575:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4557:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4568:2:6","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4550:6:6"},"nodeType":"YulFunctionCall","src":"4550:21:6"},"nodeType":"YulExpressionStatement","src":"4550:21:6"},{"nodeType":"YulVariableDeclaration","src":"4580:70:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4623:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4635:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4646:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4631:3:6"},"nodeType":"YulFunctionCall","src":"4631:18:6"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"4594:28:6"},"nodeType":"YulFunctionCall","src":"4594:56:6"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4584:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4659:12:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4669:2:6","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4663:2:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4691:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4702:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4687:3:6"},"nodeType":"YulFunctionCall","src":"4687:18:6"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4711:6:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4719:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4707:3:6"},"nodeType":"YulFunctionCall","src":"4707:22:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4680:6:6"},"nodeType":"YulFunctionCall","src":"4680:50:6"},"nodeType":"YulExpressionStatement","src":"4680:50:6"},{"nodeType":"YulVariableDeclaration","src":"4739:17:6","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4750:6:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4743:3:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4765:27:6","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4785:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4779:5:6"},"nodeType":"YulFunctionCall","src":"4779:13:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4769:6:6","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4808:6:6"},{"name":"length","nodeType":"YulIdentifier","src":"4816:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4801:6:6"},"nodeType":"YulFunctionCall","src":"4801:22:6"},"nodeType":"YulExpressionStatement","src":"4801:22:6"},{"nodeType":"YulAssignment","src":"4832:22:6","value":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4843:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4851:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4839:3:6"},"nodeType":"YulFunctionCall","src":"4839:15:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4832:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"4863:29:6","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4881:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4889:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4877:3:6"},"nodeType":"YulFunctionCall","src":"4877:15:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4867:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4901:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4910:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4905:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"4969:120:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4990:3:6"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5001:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4995:5:6"},"nodeType":"YulFunctionCall","src":"4995:13:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4983:6:6"},"nodeType":"YulFunctionCall","src":"4983:26:6"},"nodeType":"YulExpressionStatement","src":"4983:26:6"},{"nodeType":"YulAssignment","src":"5022:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5033:3:6"},{"name":"_1","nodeType":"YulIdentifier","src":"5038:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5029:3:6"},"nodeType":"YulFunctionCall","src":"5029:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5022:3:6"}]},{"nodeType":"YulAssignment","src":"5054:25:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5068:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"5076:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5064:3:6"},"nodeType":"YulFunctionCall","src":"5064:15:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5054:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4931:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"4934:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4928:2:6"},"nodeType":"YulFunctionCall","src":"4928:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4942:18:6","statements":[{"nodeType":"YulAssignment","src":"4944:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4953:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"4956:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4949:3:6"},"nodeType":"YulFunctionCall","src":"4949:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4944:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"4924:3:6","statements":[]},"src":"4920:169:6"},{"nodeType":"YulAssignment","src":"5098:11:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"5106:3:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5098:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4501:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4512:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4520:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4531:4:6","type":""}],"src":"4311:804:6"},{"body":{"nodeType":"YulBlock","src":"5271:110:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5288:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5299:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5281:6:6"},"nodeType":"YulFunctionCall","src":"5281:21:6"},"nodeType":"YulExpressionStatement","src":"5281:21:6"},{"nodeType":"YulAssignment","src":"5311:64:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5348:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5360:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5371:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5356:3:6"},"nodeType":"YulFunctionCall","src":"5356:18:6"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"5319:28:6"},"nodeType":"YulFunctionCall","src":"5319:56:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5311:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5240:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5251:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5262:4:6","type":""}],"src":"5120:261:6"},{"body":{"nodeType":"YulBlock","src":"5473:173:6","statements":[{"body":{"nodeType":"YulBlock","src":"5519:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5528:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5531:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5521:6:6"},"nodeType":"YulFunctionCall","src":"5521:12:6"},"nodeType":"YulExpressionStatement","src":"5521:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5494:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"5503:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5490:3:6"},"nodeType":"YulFunctionCall","src":"5490:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"5515:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5486:3:6"},"nodeType":"YulFunctionCall","src":"5486:32:6"},"nodeType":"YulIf","src":"5483:52:6"},{"nodeType":"YulAssignment","src":"5544:39:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5573:9:6"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5554:18:6"},"nodeType":"YulFunctionCall","src":"5554:29:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5544:6:6"}]},{"nodeType":"YulAssignment","src":"5592:48:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5625:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5636:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5621:3:6"},"nodeType":"YulFunctionCall","src":"5621:18:6"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5602:18:6"},"nodeType":"YulFunctionCall","src":"5602:38:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5592:6:6"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5431:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5442:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5454:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5462:6:6","type":""}],"src":"5386:260:6"},{"body":{"nodeType":"YulBlock","src":"5706:325:6","statements":[{"nodeType":"YulAssignment","src":"5716:22:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5730:1:6","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5733:4:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5726:3:6"},"nodeType":"YulFunctionCall","src":"5726:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5716:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"5747:38:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5777:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"5783:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5773:3:6"},"nodeType":"YulFunctionCall","src":"5773:12:6"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5751:18:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"5824:31:6","statements":[{"nodeType":"YulAssignment","src":"5826:27:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5840:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5848:4:6","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5836:3:6"},"nodeType":"YulFunctionCall","src":"5836:17:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5826:6:6"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5804:18:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5797:6:6"},"nodeType":"YulFunctionCall","src":"5797:26:6"},"nodeType":"YulIf","src":"5794:61:6"},{"body":{"nodeType":"YulBlock","src":"5914:111:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5935:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5942:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5947:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5938:3:6"},"nodeType":"YulFunctionCall","src":"5938:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5928:6:6"},"nodeType":"YulFunctionCall","src":"5928:31:6"},"nodeType":"YulExpressionStatement","src":"5928:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5979:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5982:4:6","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5972:6:6"},"nodeType":"YulFunctionCall","src":"5972:15:6"},"nodeType":"YulExpressionStatement","src":"5972:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6007:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6010:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6000:6:6"},"nodeType":"YulFunctionCall","src":"6000:15:6"},"nodeType":"YulExpressionStatement","src":"6000:15:6"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5870:18:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5893:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5901:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5890:2:6"},"nodeType":"YulFunctionCall","src":"5890:14:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5867:2:6"},"nodeType":"YulFunctionCall","src":"5867:38:6"},"nodeType":"YulIf","src":"5864:161:6"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5686:4:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5695:6:6","type":""}],"src":"5651:380:6"},{"body":{"nodeType":"YulBlock","src":"6210:160:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6227:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6238:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6220:6:6"},"nodeType":"YulFunctionCall","src":"6220:21:6"},"nodeType":"YulExpressionStatement","src":"6220:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6261:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6272:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6257:3:6"},"nodeType":"YulFunctionCall","src":"6257:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"6277:2:6","type":"","value":"10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6250:6:6"},"nodeType":"YulFunctionCall","src":"6250:30:6"},"nodeType":"YulExpressionStatement","src":"6250:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6300:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6311:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6296:3:6"},"nodeType":"YulFunctionCall","src":"6296:18:6"},{"hexValue":"6e6f2072657761726473","kind":"string","nodeType":"YulLiteral","src":"6316:12:6","type":"","value":"no rewards"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6289:6:6"},"nodeType":"YulFunctionCall","src":"6289:40:6"},"nodeType":"YulExpressionStatement","src":"6289:40:6"},{"nodeType":"YulAssignment","src":"6338:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6350:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6361:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6346:3:6"},"nodeType":"YulFunctionCall","src":"6346:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6338:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d7d4657f1e5c346169e33cfd4ee94460b0279d85f82631dbf0b0dfbfdb665b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6187:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6201:4:6","type":""}],"src":"6036:334:6"},{"body":{"nodeType":"YulBlock","src":"6407:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6424:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6431:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6436:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6427:3:6"},"nodeType":"YulFunctionCall","src":"6427:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6417:6:6"},"nodeType":"YulFunctionCall","src":"6417:31:6"},"nodeType":"YulExpressionStatement","src":"6417:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6464:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6467:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6457:6:6"},"nodeType":"YulFunctionCall","src":"6457:15:6"},"nodeType":"YulExpressionStatement","src":"6457:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6488:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6491:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6481:6:6"},"nodeType":"YulFunctionCall","src":"6481:15:6"},"nodeType":"YulExpressionStatement","src":"6481:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6375:127:6"},{"body":{"nodeType":"YulBlock","src":"6559:116:6","statements":[{"nodeType":"YulAssignment","src":"6569:20:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6584:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6587:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6580:3:6"},"nodeType":"YulFunctionCall","src":"6580:9:6"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6569:7:6"}]},{"body":{"nodeType":"YulBlock","src":"6647:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6649:16:6"},"nodeType":"YulFunctionCall","src":"6649:18:6"},"nodeType":"YulExpressionStatement","src":"6649:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6618:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6611:6:6"},"nodeType":"YulFunctionCall","src":"6611:9:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6625:1:6"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"6632:7:6"},{"name":"x","nodeType":"YulIdentifier","src":"6641:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6628:3:6"},"nodeType":"YulFunctionCall","src":"6628:15:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6622:2:6"},"nodeType":"YulFunctionCall","src":"6622:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6608:2:6"},"nodeType":"YulFunctionCall","src":"6608:37:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6601:6:6"},"nodeType":"YulFunctionCall","src":"6601:45:6"},"nodeType":"YulIf","src":"6598:71:6"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6538:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6541:1:6","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6547:7:6","type":""}],"src":"6507:168:6"},{"body":{"nodeType":"YulBlock","src":"6726:171:6","statements":[{"body":{"nodeType":"YulBlock","src":"6757:111:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6778:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6785:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6790:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6781:3:6"},"nodeType":"YulFunctionCall","src":"6781:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6771:6:6"},"nodeType":"YulFunctionCall","src":"6771:31:6"},"nodeType":"YulExpressionStatement","src":"6771:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6822:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6825:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6815:6:6"},"nodeType":"YulFunctionCall","src":"6815:15:6"},"nodeType":"YulExpressionStatement","src":"6815:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6850:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6853:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6843:6:6"},"nodeType":"YulFunctionCall","src":"6843:15:6"},"nodeType":"YulExpressionStatement","src":"6843:15:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6746:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6739:6:6"},"nodeType":"YulFunctionCall","src":"6739:9:6"},"nodeType":"YulIf","src":"6736:132:6"},{"nodeType":"YulAssignment","src":"6877:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6886:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6889:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6882:3:6"},"nodeType":"YulFunctionCall","src":"6882:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6877:1:6"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6711:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6714:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6720:1:6","type":""}],"src":"6680:217:6"},{"body":{"nodeType":"YulBlock","src":"6951:79:6","statements":[{"nodeType":"YulAssignment","src":"6961:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6973:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6976:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6969:3:6"},"nodeType":"YulFunctionCall","src":"6969:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6961:4:6"}]},{"body":{"nodeType":"YulBlock","src":"7002:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7004:16:6"},"nodeType":"YulFunctionCall","src":"7004:18:6"},"nodeType":"YulExpressionStatement","src":"7004:18:6"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6993:4:6"},{"name":"x","nodeType":"YulIdentifier","src":"6999:1:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6990:2:6"},"nodeType":"YulFunctionCall","src":"6990:11:6"},"nodeType":"YulIf","src":"6987:37:6"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6933:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6936:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6942:4:6","type":""}],"src":"6902:128:6"},{"body":{"nodeType":"YulBlock","src":"7083:77:6","statements":[{"nodeType":"YulAssignment","src":"7093:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7104:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"7107:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7100:3:6"},"nodeType":"YulFunctionCall","src":"7100:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7093:3:6"}]},{"body":{"nodeType":"YulBlock","src":"7132:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7134:16:6"},"nodeType":"YulFunctionCall","src":"7134:18:6"},"nodeType":"YulExpressionStatement","src":"7134:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7124:1:6"},{"name":"sum","nodeType":"YulIdentifier","src":"7127:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7121:2:6"},"nodeType":"YulFunctionCall","src":"7121:10:6"},"nodeType":"YulIf","src":"7118:36:6"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7066:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"7069:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7075:3:6","type":""}],"src":"7035:125:6"},{"body":{"nodeType":"YulBlock","src":"7212:88:6","statements":[{"body":{"nodeType":"YulBlock","src":"7243:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7245:16:6"},"nodeType":"YulFunctionCall","src":"7245:18:6"},"nodeType":"YulExpressionStatement","src":"7245:18:6"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7228:5:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7239:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7235:3:6"},"nodeType":"YulFunctionCall","src":"7235:6:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7225:2:6"},"nodeType":"YulFunctionCall","src":"7225:17:6"},"nodeType":"YulIf","src":"7222:43:6"},{"nodeType":"YulAssignment","src":"7274:20:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7285:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"7292:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7281:3:6"},"nodeType":"YulFunctionCall","src":"7281:13:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7274:3:6"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7194:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7204:3:6","type":""}],"src":"7165:135:6"},{"body":{"nodeType":"YulBlock","src":"7479:170:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7496:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7507:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7489:6:6"},"nodeType":"YulFunctionCall","src":"7489:21:6"},"nodeType":"YulExpressionStatement","src":"7489:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7530:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7541:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7526:3:6"},"nodeType":"YulFunctionCall","src":"7526:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"7546:2:6","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7519:6:6"},"nodeType":"YulFunctionCall","src":"7519:30:6"},"nodeType":"YulExpressionStatement","src":"7519:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7569:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7565:3:6"},"nodeType":"YulFunctionCall","src":"7565:18:6"},{"hexValue":"496e73756666696369656e74204465706f736974","kind":"string","nodeType":"YulLiteral","src":"7585:22:6","type":"","value":"Insufficient Deposit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7558:6:6"},"nodeType":"YulFunctionCall","src":"7558:50:6"},"nodeType":"YulExpressionStatement","src":"7558:50:6"},{"nodeType":"YulAssignment","src":"7617:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7629:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7640:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7625:3:6"},"nodeType":"YulFunctionCall","src":"7625:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7617:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_5363af03e03c9fa33635a23e559baa409daf2be12a3bbb8308c387e9527b6660__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7456:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7470:4:6","type":""}],"src":"7305:344:6"},{"body":{"nodeType":"YulBlock","src":"7828:168:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7845:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7856:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7838:6:6"},"nodeType":"YulFunctionCall","src":"7838:21:6"},"nodeType":"YulExpressionStatement","src":"7838:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7879:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7890:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7875:3:6"},"nodeType":"YulFunctionCall","src":"7875:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"7895:2:6","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7868:6:6"},"nodeType":"YulFunctionCall","src":"7868:30:6"},"nodeType":"YulExpressionStatement","src":"7868:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7918:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7929:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7914:3:6"},"nodeType":"YulFunctionCall","src":"7914:18:6"},{"hexValue":"6d6178206c696d6974206578636565646564","kind":"string","nodeType":"YulLiteral","src":"7934:20:6","type":"","value":"max limit exceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7907:6:6"},"nodeType":"YulFunctionCall","src":"7907:48:6"},"nodeType":"YulExpressionStatement","src":"7907:48:6"},{"nodeType":"YulAssignment","src":"7964:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7976:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7987:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7972:3:6"},"nodeType":"YulFunctionCall","src":"7972:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7964:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f1a03a73967bd0630d11134aa7813e413618859a043f2c49b19c7944b8b70d0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7805:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7819:4:6","type":""}],"src":"7654:342:6"},{"body":{"nodeType":"YulBlock","src":"8175:168:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8192:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8203:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8185:6:6"},"nodeType":"YulFunctionCall","src":"8185:21:6"},"nodeType":"YulExpressionStatement","src":"8185:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8226:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8237:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8222:3:6"},"nodeType":"YulFunctionCall","src":"8222:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"8242:2:6","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8215:6:6"},"nodeType":"YulFunctionCall","src":"8215:30:6"},"nodeType":"YulExpressionStatement","src":"8215:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8265:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8276:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8261:3:6"},"nodeType":"YulFunctionCall","src":"8261:18:6"},{"hexValue":"696e73756666696369656e742066756e6473","kind":"string","nodeType":"YulLiteral","src":"8281:20:6","type":"","value":"insufficient funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8254:6:6"},"nodeType":"YulFunctionCall","src":"8254:48:6"},"nodeType":"YulExpressionStatement","src":"8254:48:6"},{"nodeType":"YulAssignment","src":"8311:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8323:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8334:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8319:3:6"},"nodeType":"YulFunctionCall","src":"8319:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8311:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8152:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8166:4:6","type":""}],"src":"8001:342:6"},{"body":{"nodeType":"YulBlock","src":"8522:223:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8539:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8550:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8532:6:6"},"nodeType":"YulFunctionCall","src":"8532:21:6"},"nodeType":"YulExpressionStatement","src":"8532:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8573:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8584:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8569:3:6"},"nodeType":"YulFunctionCall","src":"8569:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"8589:2:6","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8562:6:6"},"nodeType":"YulFunctionCall","src":"8562:30:6"},"nodeType":"YulExpressionStatement","src":"8562:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8612:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8623:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8608:3:6"},"nodeType":"YulFunctionCall","src":"8608:18:6"},{"hexValue":"4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f","kind":"string","nodeType":"YulLiteral","src":"8628:34:6","type":"","value":"Only owner can call this functio"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8601:6:6"},"nodeType":"YulFunctionCall","src":"8601:62:6"},"nodeType":"YulExpressionStatement","src":"8601:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8683:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8694:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8679:3:6"},"nodeType":"YulFunctionCall","src":"8679:18:6"},{"hexValue":"6e","kind":"string","nodeType":"YulLiteral","src":"8699:3:6","type":"","value":"n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8672:6:6"},"nodeType":"YulFunctionCall","src":"8672:31:6"},"nodeType":"YulExpressionStatement","src":"8672:31:6"},{"nodeType":"YulAssignment","src":"8712:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8724:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8735:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8720:3:6"},"nodeType":"YulFunctionCall","src":"8720:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8712:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8499:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8513:4:6","type":""}],"src":"8348:397:6"},{"body":{"nodeType":"YulBlock","src":"8924:177:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8941:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8952:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8934:6:6"},"nodeType":"YulFunctionCall","src":"8934:21:6"},"nodeType":"YulExpressionStatement","src":"8934:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8975:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8986:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8971:3:6"},"nodeType":"YulFunctionCall","src":"8971:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"8991:2:6","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8964:6:6"},"nodeType":"YulFunctionCall","src":"8964:30:6"},"nodeType":"YulExpressionStatement","src":"8964:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9014:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9025:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9010:3:6"},"nodeType":"YulFunctionCall","src":"9010:18:6"},{"hexValue":"6d696e2073686f756c64206265206c657373207468616e206d6178","kind":"string","nodeType":"YulLiteral","src":"9030:29:6","type":"","value":"min should be less than max"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9003:6:6"},"nodeType":"YulFunctionCall","src":"9003:57:6"},"nodeType":"YulExpressionStatement","src":"9003:57:6"},{"nodeType":"YulAssignment","src":"9069:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9081:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9092:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9077:3:6"},"nodeType":"YulFunctionCall","src":"9077:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9069:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_256ba5c174baaeb521b2e7aa542991d69ad896f2091eb3ab87dfa8c88f77f7df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8901:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8915:4:6","type":""}],"src":"8750:351:6"},{"body":{"nodeType":"YulBlock","src":"9170:358:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9180:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9195:1:6","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"9184:7:6","type":""}]},{"nodeType":"YulAssignment","src":"9205:16:6","value":{"name":"power_1","nodeType":"YulIdentifier","src":"9214:7:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9205:5:6"}]},{"nodeType":"YulAssignment","src":"9230:13:6","value":{"name":"_base","nodeType":"YulIdentifier","src":"9238:5:6"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"9230:4:6"}]},{"body":{"nodeType":"YulBlock","src":"9294:228:6","statements":[{"body":{"nodeType":"YulBlock","src":"9339:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9341:16:6"},"nodeType":"YulFunctionCall","src":"9341:18:6"},"nodeType":"YulExpressionStatement","src":"9341:18:6"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9314:4:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9328:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9324:3:6"},"nodeType":"YulFunctionCall","src":"9324:6:6"},{"name":"base","nodeType":"YulIdentifier","src":"9332:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9320:3:6"},"nodeType":"YulFunctionCall","src":"9320:17:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9311:2:6"},"nodeType":"YulFunctionCall","src":"9311:27:6"},"nodeType":"YulIf","src":"9308:53:6"},{"body":{"nodeType":"YulBlock","src":"9400:29:6","statements":[{"nodeType":"YulAssignment","src":"9402:25:6","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"9415:5:6"},{"name":"base","nodeType":"YulIdentifier","src":"9422:4:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9411:3:6"},"nodeType":"YulFunctionCall","src":"9411:16:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9402:5:6"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9381:8:6"},{"name":"power_1","nodeType":"YulIdentifier","src":"9391:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9377:3:6"},"nodeType":"YulFunctionCall","src":"9377:22:6"},"nodeType":"YulIf","src":"9374:55:6"},{"nodeType":"YulAssignment","src":"9442:23:6","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9454:4:6"},{"name":"base","nodeType":"YulIdentifier","src":"9460:4:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9450:3:6"},"nodeType":"YulFunctionCall","src":"9450:15:6"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"9442:4:6"}]},{"nodeType":"YulAssignment","src":"9478:34:6","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"9494:7:6"},{"name":"exponent","nodeType":"YulIdentifier","src":"9503:8:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9490:3:6"},"nodeType":"YulFunctionCall","src":"9490:22:6"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"9478:8:6"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9263:8:6"},{"name":"power_1","nodeType":"YulIdentifier","src":"9273:7:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9260:2:6"},"nodeType":"YulFunctionCall","src":"9260:21:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9282:3:6","statements":[]},"pre":{"nodeType":"YulBlock","src":"9256:3:6","statements":[]},"src":"9252:270:6"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"9134:5:6","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"9141:8:6","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"9154:5:6","type":""},{"name":"base","nodeType":"YulTypedName","src":"9161:4:6","type":""}],"src":"9106:422:6"},{"body":{"nodeType":"YulBlock","src":"9592:747:6","statements":[{"body":{"nodeType":"YulBlock","src":"9630:52:6","statements":[{"nodeType":"YulAssignment","src":"9644:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9653:1:6","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9644:5:6"}]},{"nodeType":"YulLeave","src":"9667:5:6"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9612:8:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9605:6:6"},"nodeType":"YulFunctionCall","src":"9605:16:6"},"nodeType":"YulIf","src":"9602:80:6"},{"body":{"nodeType":"YulBlock","src":"9715:52:6","statements":[{"nodeType":"YulAssignment","src":"9729:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9738:1:6","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9729:5:6"}]},{"nodeType":"YulLeave","src":"9752:5:6"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9701:4:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9694:6:6"},"nodeType":"YulFunctionCall","src":"9694:12:6"},"nodeType":"YulIf","src":"9691:76:6"},{"cases":[{"body":{"nodeType":"YulBlock","src":"9803:52:6","statements":[{"nodeType":"YulAssignment","src":"9817:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9826:1:6","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9817:5:6"}]},{"nodeType":"YulLeave","src":"9840:5:6"}]},"nodeType":"YulCase","src":"9796:59:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9801:1:6","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9871:123:6","statements":[{"body":{"nodeType":"YulBlock","src":"9906:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9908:16:6"},"nodeType":"YulFunctionCall","src":"9908:18:6"},"nodeType":"YulExpressionStatement","src":"9908:18:6"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9891:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"9901:3:6","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9888:2:6"},"nodeType":"YulFunctionCall","src":"9888:17:6"},"nodeType":"YulIf","src":"9885:43:6"},{"nodeType":"YulAssignment","src":"9941:25:6","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9954:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"9964:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9950:3:6"},"nodeType":"YulFunctionCall","src":"9950:16:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9941:5:6"}]},{"nodeType":"YulLeave","src":"9979:5:6"}]},"nodeType":"YulCase","src":"9864:130:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9869:1:6","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"9783:4:6"},"nodeType":"YulSwitch","src":"9776:218:6"},{"body":{"nodeType":"YulBlock","src":"10092:70:6","statements":[{"nodeType":"YulAssignment","src":"10106:28:6","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10119:4:6"},{"name":"exponent","nodeType":"YulIdentifier","src":"10125:8:6"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"10115:3:6"},"nodeType":"YulFunctionCall","src":"10115:19:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10106:5:6"}]},{"nodeType":"YulLeave","src":"10147:5:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10016:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"10022:2:6","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10013:2:6"},"nodeType":"YulFunctionCall","src":"10013:12:6"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10030:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"10040:2:6","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10027:2:6"},"nodeType":"YulFunctionCall","src":"10027:16:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10009:3:6"},"nodeType":"YulFunctionCall","src":"10009:35:6"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10053:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"10059:3:6","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10050:2:6"},"nodeType":"YulFunctionCall","src":"10050:13:6"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10068:8:6"},{"kind":"number","nodeType":"YulLiteral","src":"10078:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10065:2:6"},"nodeType":"YulFunctionCall","src":"10065:16:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10046:3:6"},"nodeType":"YulFunctionCall","src":"10046:36:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10006:2:6"},"nodeType":"YulFunctionCall","src":"10006:77:6"},"nodeType":"YulIf","src":"10003:159:6"},{"nodeType":"YulVariableDeclaration","src":"10171:57:6","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10213:4:6"},{"name":"exponent","nodeType":"YulIdentifier","src":"10219:8:6"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"10194:18:6"},"nodeType":"YulFunctionCall","src":"10194:34:6"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"10175:7:6","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"10184:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"10273:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10275:16:6"},"nodeType":"YulFunctionCall","src":"10275:18:6"},"nodeType":"YulExpressionStatement","src":"10275:18:6"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"10243:7:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10260:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10256:3:6"},"nodeType":"YulFunctionCall","src":"10256:6:6"},{"name":"base_1","nodeType":"YulIdentifier","src":"10264:6:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10252:3:6"},"nodeType":"YulFunctionCall","src":"10252:19:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10240:2:6"},"nodeType":"YulFunctionCall","src":"10240:32:6"},"nodeType":"YulIf","src":"10237:58:6"},{"nodeType":"YulAssignment","src":"10304:29:6","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"10317:7:6"},{"name":"base_1","nodeType":"YulIdentifier","src":"10326:6:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10313:3:6"},"nodeType":"YulFunctionCall","src":"10313:20:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10304:5:6"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"9563:4:6","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"9569:8:6","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"9582:5:6","type":""}],"src":"9533:806:6"},{"body":{"nodeType":"YulBlock","src":"10414:61:6","statements":[{"nodeType":"YulAssignment","src":"10424:45:6","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10454:4:6"},{"name":"exponent","nodeType":"YulIdentifier","src":"10460:8:6"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"10433:20:6"},"nodeType":"YulFunctionCall","src":"10433:36:6"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10424:5:6"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"10385:4:6","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"10391:8:6","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"10404:5:6","type":""}],"src":"10344:131:6"},{"body":{"nodeType":"YulBlock","src":"10512:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10529:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10536:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10541:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10532:3:6"},"nodeType":"YulFunctionCall","src":"10532:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10522:6:6"},"nodeType":"YulFunctionCall","src":"10522:31:6"},"nodeType":"YulExpressionStatement","src":"10522:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10569:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10572:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10562:6:6"},"nodeType":"YulFunctionCall","src":"10562:15:6"},"nodeType":"YulExpressionStatement","src":"10562:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10593:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10596:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10586:6:6"},"nodeType":"YulFunctionCall","src":"10586:15:6"},"nodeType":"YulExpressionStatement","src":"10586:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10480:127:6"},{"body":{"nodeType":"YulBlock","src":"10644:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10661:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10668:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10673:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10664:3:6"},"nodeType":"YulFunctionCall","src":"10664:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10654:6:6"},"nodeType":"YulFunctionCall","src":"10654:31:6"},"nodeType":"YulExpressionStatement","src":"10654:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10701:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10704:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10694:6:6"},"nodeType":"YulFunctionCall","src":"10694:15:6"},"nodeType":"YulExpressionStatement","src":"10694:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10725:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10728:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10718:6:6"},"nodeType":"YulFunctionCall","src":"10718:15:6"},"nodeType":"YulExpressionStatement","src":"10718:15:6"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10612:127:6"},{"body":{"nodeType":"YulBlock","src":"10901:211:6","statements":[{"nodeType":"YulAssignment","src":"10911:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10923:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10934:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10919:3:6"},"nodeType":"YulFunctionCall","src":"10919:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10911:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10953:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10968:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10976:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10964:3:6"},"nodeType":"YulFunctionCall","src":"10964:55:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10946:6:6"},"nodeType":"YulFunctionCall","src":"10946:74:6"},"nodeType":"YulExpressionStatement","src":"10946:74:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11040:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11051:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11036:3:6"},"nodeType":"YulFunctionCall","src":"11036:18:6"},{"name":"value1","nodeType":"YulIdentifier","src":"11056:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11029:6:6"},"nodeType":"YulFunctionCall","src":"11029:34:6"},"nodeType":"YulExpressionStatement","src":"11029:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11083:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11094:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11079:3:6"},"nodeType":"YulFunctionCall","src":"11079:18:6"},{"name":"value2","nodeType":"YulIdentifier","src":"11099:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11072:6:6"},"nodeType":"YulFunctionCall","src":"11072:34:6"},"nodeType":"YulExpressionStatement","src":"11072:34:6"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10854:9:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10865:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10873:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10881:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10892:4:6","type":""}],"src":"10744:368:6"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 64))\n        let _1 := 32\n        mstore(add(headStart, _1), sub(tail_1, headStart))\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(tail_1, _1)\n        let srcPtr := add(value1, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_6d7d4657f1e5c346169e33cfd4ee94460b0279d85f82631dbf0b0dfbfdb665b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"no rewards\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_5363af03e03c9fa33635a23e559baa409daf2be12a3bbb8308c387e9527b6660__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient Deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f1a03a73967bd0630d11134aa7813e413618859a043f2c49b19c7944b8b70d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"max limit exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"insufficient funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Only owner can call this functio\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_256ba5c174baaeb521b2e7aa542991d69ad896f2091eb3ab87dfa8c88f77f7df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"min should be less than max\")\n        tail := add(headStart, 96)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061015f5760003560e01c806395d89b41116100c0578063c94c178b11610074578063dd62ed3e11610059578063dd62ed3e1461041d578063e0ebf61a14610463578063f3bc21b91461048357600080fd5b8063c94c178b146103cd578063ca593db0146103fb57600080fd5b8063a8376b3c116100a5578063a8376b3c1461036d578063a9059cbb1461038d578063b7c7c4e0146103ad57600080fd5b806395d89b4114610345578063a3f81da01461035a57600080fd5b8063313ce5671161011757806370a08231116100fc57806370a08231146102715780638da5cb5b146102a75780638fb0a9f4146102df57600080fd5b8063313ce5671461022057806331d982371461023c57600080fd5b80630962ef79116101485780630962ef79146101bf57806318160ddd146101e157806323b872dd1461020057600080fd5b806306fdde0314610164578063095ea7b31461018f575b600080fd5b34801561017057600080fd5b506101796104a3565b60405161018691906111dd565b60405180910390f35b34801561019b57600080fd5b506101af6101aa366004611247565b610535565b6040519015158152602001610186565b3480156101cb57600080fd5b506101df6101da366004611271565b61054f565b005b3480156101ed57600080fd5b506002545b604051908152602001610186565b34801561020c57600080fd5b506101af61021b36600461128a565b610627565b34801561022c57600080fd5b5060405160128152602001610186565b34801561024857600080fd5b5061025c6102573660046112c6565b61064b565b60408051928352602083019190915201610186565b34801561027d57600080fd5b506101f261028c3660046112c6565b6001600160a01b031660009081526020819052604090205490565b3480156102b357600080fd5b506005546102c7906001600160a01b031681565b6040516001600160a01b039091168152602001610186565b3480156102eb57600080fd5b506103256102fa366004611271565b6000908152600b60205260409020600181015460028201546003830154600490930154919390929190565b604080519485526020850193909352918301526060820152608001610186565b34801561035157600080fd5b50610179610758565b6101df610368366004611271565b610767565b34801561037957600080fd5b506101df6103883660046112e8565b610984565b34801561039957600080fd5b506101af6103a8366004611247565b610ae1565b3480156103b957600080fd5b506101df6103c836600461130a565b610aef565b3480156103d957600080fd5b506103ed6103e8366004611271565b610c25565b604051610186929190611380565b34801561040757600080fd5b50610410610d8a565b60405161018691906113d7565b34801561042957600080fd5b506101f26104383660046113ea565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561046f57600080fd5b506101f261047e366004611271565b610deb565b34801561048f57600080fd5b506101f261049e366004611271565b610e9b565b6060600380546104b29061141d565b80601f01602080910402602001604051908101604052809291908181526020018280546104de9061141d565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b5050505050905090565b600033610543818585610ebe565b60019150505b92915050565b600061055a82610deb565b9050600081116105b15760405162461bcd60e51b815260206004820152600a60248201527f6e6f20726577617264730000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b3360009081526008602052604090205460ff16156105e35760646105d682607861146d565b6105e09190611484565b90505b6000828152600b6020908152604080832033808552600690910190925290912042600190910155600554610623916001600160a01b039091169083610ecb565b5050565b600033610635858285610ff5565b610640858585611073565b506001949350505050565b6000806000805b600a54811015610737576000818152600b602090815260408083206001600160a01b038916845260060190915281206001015461068f90426114a6565b6000838152600b6020526040812060040154919250906106af9083611484565b6000848152600b6020526040812060020154919250906106d090839061146d565b6000858152600b602090815260408083206001600160a01b038d1684526006019091528120549192509060649061070890849061146d565b6107129190611484565b905061071e81876114b9565b955050505050808061072f906114cc565b915050610652565b506001600160a01b0390931660009081526009602052604090205493915050565b6060600480546104b29061141d565b6000818152600b602052604090206003015434116107c75760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e74204465706f73697400000000000000000000000060448201526064016105a8565b6000818152600b60205260409020600501546107e390346114b9565b6000828152600b602052604090206001015410156108435760405162461bcd60e51b815260206004820152601260248201527f6d6178206c696d6974206578636565646564000000000000000000000000000060448201526064016105a8565b6000818152600b6020526040812060050180543492906108649084906114b9565b909155505033600090815260096020526040812080543492906108889084906114b9565b90915550506000818152600b6020818152604080842033808652600682018452828620348155426001918201558254808852600784018652938720805473ffffffffffffffffffffffffffffffffffffffff19169092179091558686529390925281549093906108f99084906114b9565b909155505060065433600090815260096020526040902054111561062357336000818152600860205260408120805460ff191660019081179091556007805491820181559091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801805473ffffffffffffffffffffffffffffffffffffffff191690911790555050565b6000828152600b602090815260408083203384526006019091529020546109ed5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e742066756e6473000000000000000000000000000060448201526064016105a8565b6000828152600b6020908152604080832033845260060190915281208054839290610a199084906114a6565b90915550506000828152600b602052604081206005018054839290610a3f9084906114a6565b90915550503360009081526009602052604081208054839290610a639084906114a6565b90915550506000828152600b602090815260408083203384526006019091528120549003610aaf576000828152600b602090815260408083203384526006019091529020426001909101555b604051339082156108fc029083906000818181858888f19350505050158015610adc573d6000803e3d6000fd5b505050565b600033610543818585611073565b6005546001600160a01b03163314610b535760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016105a8565b838210610ba25760405162461bcd60e51b815260206004820152601b60248201527f6d696e2073686f756c64206265206c657373207468616e206d6178000000000060448201526064016105a8565b610bc133610bb26002600a6115c9565b610bbc908761146d565b6110d2565b600a80546000908152600b602052604080822060010187905582548252808220600201869055825482528082206003018590558254825280822060040184905582548252812060050181905581549190610c1a836114cc565b919050555050505050565b6000818152600b60205260408120546060918291908167ffffffffffffffff811115610c5357610c536115d5565b604051908082528060200260200182016040528015610c7c578160200160208202803683370190505b50905060008267ffffffffffffffff811115610c9a57610c9a6115d5565b604051908082528060200260200182016040528015610cc3578160200160208202803683370190505b50905060005b83811015610d7e576000878152600b6020908152604080832084845260070190915290205483516001600160a01b03909116908190859084908110610d1057610d106115eb565b6001600160a01b0392831660209182029290920181019190915260008a8152600b8252604080822093851682526006909301909152205483518190859085908110610d5d57610d5d6115eb565b60200260200101818152505050508080610d76906114cc565b915050610cc9565b50909590945092505050565b6060600780548060200260200160405190810160405280929190818152602001828054801561052b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dc4575050505050905090565b6000818152600b602090815260408083203384526006019091528120600101548190610e1790426114a6565b6000848152600b602052604081206004015491925090610e379083611484565b6000858152600b602052604081206002015491925090610e5890839061146d565b6000868152600b6020908152604080832033845260060190915281205491925090606490610e8790849061146d565b610e919190611484565b9695505050505050565b6000818152600b60205260408120600581015460019091015461054991906114a6565b610adc8383836001611108565b6001600160a01b038316610ef6578060026000828254610eeb91906114b9565b90915550610f689050565b6001600160a01b03831660009081526020819052604090205481811015610f495760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105a8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610f8457600280548290039055610fa3565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fe891815260200190565b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461106d578181101561105e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105a8565b61106d84848484036000611108565b50505050565b6001600160a01b03831661109d57604051634b637e8f60e11b8152600060048201526024016105a8565b6001600160a01b0382166110c75760405163ec442f0560e01b8152600060048201526024016105a8565b610adc838383610ecb565b6001600160a01b0382166110fc5760405163ec442f0560e01b8152600060048201526024016105a8565b61062360008383610ecb565b6001600160a01b0384166111325760405163e602df0560e01b8152600060048201526024016105a8565b6001600160a01b03831661115c57604051634a1406b160e11b8152600060048201526024016105a8565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561106d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111cf91815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561120a578581018301518582016040015282016111ee565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461124257600080fd5b919050565b6000806040838503121561125a57600080fd5b6112638361122b565b946020939093013593505050565b60006020828403121561128357600080fd5b5035919050565b60008060006060848603121561129f57600080fd5b6112a88461122b565b92506112b66020850161122b565b9150604084013590509250925092565b6000602082840312156112d857600080fd5b6112e18261122b565b9392505050565b600080604083850312156112fb57600080fd5b50508035926020909101359150565b6000806000806080858703121561132057600080fd5b5050823594602084013594506040840135936060013592509050565b600081518084526020808501945080840160005b838110156113755781516001600160a01b031687529582019590820190600101611350565b509495945050505050565b604081526000611393604083018561133c565b82810360208481019190915284518083528582019282019060005b818110156113ca578451835293830193918301916001016113ae565b5090979650505050505050565b6020815260006112e1602083018461133c565b600080604083850312156113fd57600080fd5b6114068361122b565b91506114146020840161122b565b90509250929050565b600181811c9082168061143157607f821691505b60208210810361145157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761054957610549611457565b6000826114a157634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561054957610549611457565b8082018082111561054957610549611457565b6000600182016114de576114de611457565b5060010190565b600181815b8085111561152057816000190482111561150657611506611457565b8085161561151357918102915b93841c93908002906114ea565b509250929050565b60008261153757506001610549565b8161154457506000610549565b816001811461155a576002811461156457611580565b6001915050610549565b60ff84111561157557611575611457565b50506001821b610549565b5060208310610133831016604e8410600b84101617156115a3575081810a610549565b6115ad83836114e5565b80600019048211156115c1576115c1611457565b029392505050565b60006112e18383611528565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x15F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC94C178B GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xE0EBF61A EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0xF3BC21B9 EQ PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC94C178B EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xCA593DB0 EQ PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8376B3C GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA8376B3C EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xB7C7C4E0 EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xA3F81DA0 EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8FB0A9F4 EQ PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x31D98237 EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x962EF79 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x962EF79 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2C7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x130A JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0xDEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x141D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x141D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x500 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x50E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x543 DUP2 DUP6 DUP6 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55A DUP3 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F207265776172647300000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x64 PUSH2 0x5D6 DUP3 PUSH1 0x78 PUSH2 0x146D JUMP JUMPDEST PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x5 SLOAD PUSH2 0x623 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xECB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x635 DUP6 DUP3 DUP6 PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x640 DUP6 DUP6 DUP6 PUSH2 0x1073 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x68F SWAP1 TIMESTAMP PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x6AF SWAP1 DUP4 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x6D0 SWAP1 DUP4 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x708 SWAP1 DUP5 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP PUSH2 0x71E DUP2 DUP8 PUSH2 0x14B9 JUMP JUMPDEST SWAP6 POP POP POP POP POP DUP1 DUP1 PUSH2 0x72F SWAP1 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x652 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x141D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD CALLVALUE GT PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204465706F736974000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x7E3 SWAP1 CALLVALUE PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6178206C696D69742065786365656465640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x864 SWAP1 DUP5 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x888 SWAP1 DUP5 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP1 DUP7 MSTORE PUSH1 0x6 DUP3 ADD DUP5 MSTORE DUP3 DUP7 KECCAK256 CALLVALUE DUP2 SSTORE TIMESTAMP PUSH1 0x1 SWAP2 DUP3 ADD SSTORE DUP3 SLOAD DUP1 DUP9 MSTORE PUSH1 0x7 DUP5 ADD DUP7 MSTORE SWAP4 DUP8 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP7 DUP7 MSTORE SWAP4 SWAP1 SWAP3 MSTORE DUP2 SLOAD SWAP1 SWAP4 SWAP1 PUSH2 0x8F9 SWAP1 DUP5 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x623 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA19 SWAP1 DUP5 SWAP1 PUSH2 0x14A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA3F SWAP1 DUP5 SWAP1 PUSH2 0x14A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA63 SWAP1 DUP5 SWAP1 PUSH2 0x14A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xAAF JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x543 DUP2 DUP6 DUP6 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A8 JUMP JUMPDEST DUP4 DUP3 LT PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E2073686F756C64206265206C657373207468616E206D61780000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0xBC1 CALLER PUSH2 0xBB2 PUSH1 0x2 PUSH1 0xA PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0xBBC SWAP1 DUP8 PUSH2 0x146D JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP8 SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP7 SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD DUP6 SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x4 ADD DUP5 SWAP1 SSTORE DUP3 SLOAD DUP3 MSTORE DUP2 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0xC1A DUP4 PUSH2 0x14CC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC53 PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC7C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9A JUMPI PUSH2 0xC9A PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCC3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD7E JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x7 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xD10 JUMPI PUSH2 0xD10 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xB DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 DUP6 AND DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP4 ADD SWAP1 SWAP2 MSTORE KECCAK256 SLOAD DUP4 MLOAD DUP2 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xD5D JUMPI PUSH2 0xD5D PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xD76 SWAP1 PUSH2 0x14CC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCC9 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDC4 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0xE17 SWAP1 TIMESTAMP PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xE37 SWAP1 DUP4 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xE58 SWAP1 DUP4 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x64 SWAP1 PUSH2 0xE87 SWAP1 DUP5 SWAP1 PUSH2 0x146D JUMP JUMPDEST PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0xADC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEF6 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF68 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF84 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFE8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x106D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x105E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x106D DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1108 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0xADC DUP4 DUP4 DUP4 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10FC JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x623 PUSH1 0x0 DUP4 DUP4 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x106D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11CF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x120A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x11EE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1263 DUP4 PUSH2 0x122B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A8 DUP5 PUSH2 0x122B JUMP JUMPDEST SWAP3 POP PUSH2 0x12B6 PUSH1 0x20 DUP6 ADD PUSH2 0x122B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E1 DUP3 PUSH2 0x122B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1375 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1350 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1393 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x133C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP4 MSTORE DUP6 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13CA JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13AE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1406 DUP4 PUSH2 0x122B JUMP JUMPDEST SWAP2 POP PUSH2 0x1414 PUSH1 0x20 DUP5 ADD PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1431 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1451 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x1457 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x14DE JUMPI PUSH2 0x14DE PUSH2 0x1457 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1520 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1506 PUSH2 0x1457 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1513 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x14EA JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1537 JUMPI POP PUSH1 0x1 PUSH2 0x549 JUMP JUMPDEST DUP2 PUSH2 0x1544 JUMPI POP PUSH1 0x0 PUSH2 0x549 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x155A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1564 JUMPI PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x549 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1575 JUMPI PUSH2 0x1575 PUSH2 0x1457 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x549 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x15A3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x549 JUMP JUMPDEST PUSH2 0x15AD DUP4 DUP4 PUSH2 0x14E5 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x15C1 JUMPI PUSH2 0x15C1 PUSH2 0x1457 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E1 DUP4 DUP4 PUSH2 0x1528 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"120:7555:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;-1:-1:-1;4293:186:1;;;;;:::i;:::-;;:::i;:::-;;;1192:14:6;;1185:22;1167:41;;1155:2;1140:18;4293:186:1;1027:187:6;4346:359:5;;;;;;;;;;-1:-1:-1;4346:359:5;;;;;:::i;:::-;;:::i;:::-;;3144:97:1;;;;;;;;;;-1:-1:-1;3222:12:1;;3144:97;;;1550:25:6;;;1538:2;1523:18;3144:97:1;1404:177:6;5039:244:1;;;;;;;;;;-1:-1:-1;5039:244:1;;;;;:::i;:::-;;:::i;3002:82::-;;;;;;;;;;-1:-1:-1;3002:82:1;;3075:2;2061:36:6;;2049:2;2034:18;3002:82:1;1919:184:6;5272:548:5;;;;;;;;;;-1:-1:-1;5272:548:5;;;;;:::i;:::-;;:::i;:::-;;;;2473:25:6;;;2529:2;2514:18;;2507:34;;;;2446:18;5272:548:5;2299:248:6;3299:116:1;;;;;;;;;;-1:-1:-1;3299:116:1;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:1;3364:7;3390:18;;;;;;;;;;;;3299:116;158:20:5;;;;;;;;;;-1:-1:-1;158:20:5;;;;-1:-1:-1;;;;;158:20:5;;;;;;-1:-1:-1;;;;;2716:55:6;;;2698:74;;2686:2;2671:18;158:20:5;2552:226:6;4868:278:5;;;;;;;;;;-1:-1:-1;4868:278:5;;;;;:::i;:::-;4928:4;4985:13;;;:5;:13;;;;;:23;;;;5023:26;;;;5064:24;;;;5103;;;;;4985:23;;5023:26;;5064:24;5103;4868:278;;;;;3014:25:6;;;3070:2;3055:18;;3048:34;;;;3098:18;;;3091:34;3156:2;3141:18;;3134:34;3001:3;2986:19;4868:278:5;2783:391:6;2276:93:1;;;;;;;;;;;;;:::i;2443:760:5:-;;;;;;:::i;:::-;;:::i;3417:490::-;;;;;;;;;;-1:-1:-1;3417:490:5;;;;;:::i;:::-;;:::i;3610:178:1:-;;;;;;;;;;-1:-1:-1;3610:178:1;;;;;:::i;:::-;;:::i;1506:629:5:-;;;;;;;;;;-1:-1:-1;1506:629:5;;;;;:::i;:::-;;:::i;5964:554::-;;;;;;;;;;-1:-1:-1;5964:554:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;7572:100::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3846:140:1:-;;;;;;;;;;-1:-1:-1;3846:140:1;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:1;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;6825:428:5;;;;;;;;;;-1:-1:-1;6825:428:5;;;;;:::i;:::-;;:::i;7335:150::-;;;;;;;;;;-1:-1:-1;7335:150:5;;;;;:::i;:::-;;:::i;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:4;4420:31:1;735:10:4;4436:7:1;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;4346:359:5:-;4399:12;4414:29;4436:6;4414:21;:29::i;:::-;4399:44;;4472:1;4462:7;:11;4454:34;;;;-1:-1:-1;;;4454:34:5;;6238:2:6;4454:34:5;;;6220:21:6;6277:2;6257:18;;;6250:30;6316:12;6296:18;;;6289:40;6346:18;;4454:34:5;;;;;;;;;4513:10;4505:19;;;;:7;:19;;;;;;;;4501:83;;;4569:3;4552:13;:7;4562:3;4552:13;:::i;:::-;4551:21;;;;:::i;:::-;4541:31;;4501:83;4596:13;;;;:5;:13;;;;;;;;4617:10;4596:32;;;:20;;;;:32;;;;;;4636:15;4596:37;;;;:55;4670:5;;4662:35;;-1:-1:-1;;;;;4670:5:5;;;;4689:7;4662;:35::i;:::-;4388:317;4346:359;:::o;5039:244:1:-;5126:4;735:10:4;5182:37:1;5198:4;735:10:4;5213:5:1;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:1;;5039:244;-1:-1:-1;;;;5039:244:1:o;5272:548:5:-;5334:4;5340;5357:12;5390:6;5386:383;5406:3;;5402:1;:7;5386:383;;;5431:16;5468:8;;;:5;:8;;;;;;;;-1:-1:-1;;;;;5468:21:5;;;;:15;;:21;;;;;:26;;;5450:44;;:15;:44;:::i;:::-;5511:15;5543:8;;;:5;:8;;;;;:19;;;5431:63;;-1:-1:-1;5511:15:5;5529:33;;5431:63;5529:33;:::i;:::-;5579:21;5603:8;;;:5;:8;;;;;:21;;;5511:51;;-1:-1:-1;5579:21:5;5603:34;;5511:51;;5603:34;:::i;:::-;5654:11;5669:8;;;:5;:8;;;;;;;;-1:-1:-1;;;;;5669:21:5;;;;:15;;:21;;;;;:28;5579:58;;-1:-1:-1;5654:11:5;5720:3;;5669:47;;5579:58;;5669:47;:::i;:::-;5668:55;;;;:::i;:::-;5654:69;-1:-1:-1;5740:17:5;5654:69;5740:17;;:::i;:::-;;;5416:353;;;;5411:3;;;;;:::i;:::-;;;;5386:383;;;-1:-1:-1;;;;;;5789:13:5;;;;;;;:7;:13;;;;;;;5272:548;-1:-1:-1;;5272:548:5:o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;2443:760:5:-;2510:13;;;;:5;:13;;;;;:24;;;2537:9;-1:-1:-1;2502:69:5;;;;-1:-1:-1;;;2502:69:5;;7507:2:6;2502:69:5;;;7489:21:6;7546:2;7526:18;;;7519:30;7585:22;7565:18;;;7558:50;7625:18;;2502:69:5;7305:344:6;2502:69:5;2629:13;;;;:5;:13;;;;;:26;;;2617:38;;:9;:38;:::i;:::-;2590:13;;;;:5;:13;;;;;:23;;;:65;;2582:96;;;;-1:-1:-1;;;2582:96:5;;7856:2:6;2582:96:5;;;7838:21:6;7895:2;7875:18;;;7868:30;7934:20;7914:18;;;7907:48;7972:18;;2582:96:5;7654:342:6;2582:96:5;2691:13;;;;:5;:13;;;;;:26;;:39;;2721:9;;2691:13;:39;;2721:9;;2691:39;:::i;:::-;;;;-1:-1:-1;;2751:10:5;2743:19;;;;:7;:19;;;;;:32;;2766:9;;2743:19;:32;;2766:9;;2743:32;:::i;:::-;;;;-1:-1:-1;;2788:13:5;;;;:5;:13;;;;;;;;2809:10;2788:32;;;:20;;;:32;;;;;2830:9;2788:51;;2890:15;2850:37;;;;:55;2935:23;;2969:29;;;:18;;;:29;;;;;:42;;-1:-1:-1;;2969:42:5;;;;;;;3022:13;;;;;;;:28;;2935:23;;2788:13;3022:28;;2850:37;;3022:28;:::i;:::-;;;;-1:-1:-1;;3089:14:5;;3075:10;3067:19;;;;:7;:19;;;;;;:36;3063:133;;;3128:10;3120:19;;;;:7;:19;;;;;:26;;-1:-1:-1;;3120:26:5;3142:4;3120:26;;;;;;3161:6;:23;;;;;;;;;;;;;;-1:-1:-1;;3161:23:5;;;;;;2491:712;2443:760;:::o;3417:490::-;3532:1;3490:13;;;:5;:13;;;;;;;;3511:10;3490:32;;:20;;:32;;;;;:39;3482:74;;;;-1:-1:-1;;;3482:74:5;;8203:2:6;3482:74:5;;;8185:21:6;8242:2;8222:18;;;8215:30;8281:20;8261:18;;;8254:48;8319:18;;3482:74:5;8001:342:6;3482:74:5;3569:13;;;;:5;:13;;;;;;;;3590:10;3569:32;;:20;;:32;;;;;:49;;3612:6;;3569:13;:49;;3612:6;;3569:49;:::i;:::-;;;;-1:-1:-1;;3629:13:5;;;;:5;:13;;;;;:26;;:36;;3659:6;;3629:13;:36;;3659:6;;3629:36;:::i;:::-;;;;-1:-1:-1;;3684:10:5;3676:19;;;;:7;:19;;;;;:29;;3699:6;;3676:19;:29;;3699:6;;3676:29;:::i;:::-;;;;-1:-1:-1;;3722:13:5;;;;:5;:13;;;;;;;;3743:10;3722:32;;:20;;:32;;;;;:39;:44;;3718:133;;3784:13;;;;:5;:13;;;;;;;;3805:10;3784:32;;:20;;:32;;;;;3824:15;3784:37;;;;:55;3718:133;3863:36;;3871:10;;3863:36;;;;;3892:6;;3863:36;;;;3892:6;3871:10;3863:36;;;;;;;;;;;;;;;;;;;;;3417:490;;:::o;3610:178:1:-;3679:4;735:10:4;3733:27:1;735:10:4;3750:2:1;3754:5;3733:9;:27::i;1506:629:5:-;783:5;;-1:-1:-1;;;;;783:5:5;769:10;:19;761:65;;;;-1:-1:-1;;;761:65:5;;8550:2:6;761:65:5;;;8532:21:6;8589:2;8569:18;;;8562:30;8628:34;8608:18;;;8601:62;-1:-1:-1;;;8679:18:6;;;8672:31;8720:19;;761:65:5;8348:397:6;761:65:5;1641:9:::1;1628:10;:22;1620:62;;;::::0;-1:-1:-1;;;1620:62:5;;8952:2:6;1620:62:5::1;::::0;::::1;8934:21:6::0;8991:2;8971:18;;;8964:30;9030:29;9010:18;;;9003:57;9077:18;;1620:62:5::1;8750:351:6::0;1620:62:5::1;1840:47;1846:10;1870:16;1884:1;1870:2;:16;:::i;:::-;1858:28;::::0;:9;:28:::1;:::i;:::-;1840:5;:47::i;:::-;1906:3;::::0;;1900:10:::1;::::0;;;:5:::1;:10;::::0;;;;;:20:::1;;:32:::0;;;1949:3;;1943:10;;;;;:23:::1;;:38:::0;;;1998:3;;1992:10;;;;;:21:::1;;:34:::0;;;2043:3;;2037:10;;;;;:21:::1;;:34:::0;;;2088:3;;2082:10;;;;:23:::1;;:27:::0;;;2122:5;;;1906:3;2122:5:::1;::::0;::::1;:::i;:::-;;;;;;1506:629:::0;;;;:::o;5964:554::-;6074:14;6091:13;;;:5;:13;;;;;:23;6030:16;;;;6091:23;;6150:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6150:24:5;;6125:49;;6185:22;6221:9;6210:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6210:21:5;;6185:46;;6248:6;6244:230;6264:9;6260:1;:13;6244:230;;;6295:12;6310:13;;;:5;:13;;;;;;;;:21;;;:18;;:21;;;;;;6346:8;;-1:-1:-1;;;;;6310:21:5;;;;;;6346:5;;6329:1;;6346:8;;;;;;:::i;:::-;-1:-1:-1;;;;;6346:15:5;;;:8;;;;;;;;;;:15;;;;6378:12;6393:13;;;:5;:13;;;;;;:26;;;;;:20;;;;:26;;;;:33;6441:11;;6393:33;;6441:8;;6450:1;;6441:11;;;;;;:::i;:::-;;;;;;:21;;;;;6280:194;;6275:3;;;;;:::i;:::-;;;;6244:230;;;-1:-1:-1;6494:5:5;;6501:8;;-1:-1:-1;5964:554:5;-1:-1:-1;;;5964:554:5:o;7572:100::-;7622:16;7658:6;7651:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7651:13:5;;;;;;;;;;;;;;;;;;;;;;7572:100;:::o;6825:428::-;6890:4;6944:13;;;:5;:13;;;;;;;;6965:10;6944:32;;:20;;:32;;;;;:37;;;6890:4;;6926:55;;:15;:55;:::i;:::-;6994:15;7026:13;;;:5;:13;;;;;:24;;;6907:74;;-1:-1:-1;6994:15:5;7012:38;;6907:74;7012:38;:::i;:::-;7063:21;7087:13;;;:5;:13;;;;;:26;;;6994:56;;-1:-1:-1;7063:21:5;7087:39;;6994:56;;7087:39;:::i;:::-;7139:11;7154:13;;;:5;:13;;;;;;;;7175:10;7154:32;;:20;;:32;;;;;:39;7063:63;;-1:-1:-1;7139:11:5;7216:3;;7154:58;;7063:63;;7154:58;:::i;:::-;7153:66;;;;:::i;:::-;7139:80;6825:428;-1:-1:-1;;;;;;6825:428:5:o;7335:150::-;7401:4;7451:13;;;:5;:13;;;;;:26;;;;7425:23;;;;;:52;;7451:26;7425:52;:::i;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;10964:55:6;;6649:50:1;;;10946:74:6;11036:18;;;11029:34;;;11079:18;;;11072:34;;;10919:18;;6649:50:1;10744:368:6;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;1550::6;;1538:2;1523:18;;1404:177;7346:25:1;;;;;;;;6271:1107;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:1;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:1;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:1;;-1:-1:-1;;;;;10964:55:6;;10936:60:1;;;10946:74:6;11036:18;;;11029:34;;;11079:18;;;11072:34;;;10919:18;;10936:60:1;10744:368:6;10881:130:1;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:1;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:1;;5807:1;5780:30;;;2698:74:6;2671:18;;5780:30:1;2552:226:6;5735:86:1;-1:-1:-1;;;;;5834:16:1;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:1;;5902:1;5873:32;;;2698:74:6;2671:18;;5873:32:1;2552:226:6;5830:86:1;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;7721:208::-;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;2698:74:6;2671:18;;7835:32:1;2552:226:6;7787:91:1;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:1;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:1;;10132:1;10103:32;;;2698:74:6;2671:18;;10103:32:1;2552:226:6;10057:89:1;-1:-1:-1;;;;;10159:21:1;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:1;;10231:1;10203:31;;;2698:74:6;2671:18;;10203:31:1;2552:226:6;10155:90:1;-1:-1:-1;;;;;10254:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:1;10342:5;-1:-1:-1;;;;;10333:31:1;;10358:5;10333:31;;;;1550:25:6;;1538:2;1523:18;;1404:177;10333:31:1;;;;;;;;9949:432;;;;:::o;14:548:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:196::-;635:20;;-1:-1:-1;;;;;684:54:6;;674:65;;664:93;;753:1;750;743:12;664:93;567:196;;;:::o;768:254::-;836:6;844;897:2;885:9;876:7;872:23;868:32;865:52;;;913:1;910;903:12;865:52;936:29;955:9;936:29;:::i;:::-;926:39;1012:2;997:18;;;;984:32;;-1:-1:-1;;;768:254:6:o;1219:180::-;1278:6;1331:2;1319:9;1310:7;1306:23;1302:32;1299:52;;;1347:1;1344;1337:12;1299:52;-1:-1:-1;1370:23:6;;1219:180;-1:-1:-1;1219:180:6:o;1586:328::-;1663:6;1671;1679;1732:2;1720:9;1711:7;1707:23;1703:32;1700:52;;;1748:1;1745;1738:12;1700:52;1771:29;1790:9;1771:29;:::i;:::-;1761:39;;1819:38;1853:2;1842:9;1838:18;1819:38;:::i;:::-;1809:48;;1904:2;1893:9;1889:18;1876:32;1866:42;;1586:328;;;;;:::o;2108:186::-;2167:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;2108:186;-1:-1:-1;;;2108:186:6:o;3179:248::-;3247:6;3255;3308:2;3296:9;3287:7;3283:23;3279:32;3276:52;;;3324:1;3321;3314:12;3276:52;-1:-1:-1;;3347:23:6;;;3417:2;3402:18;;;3389:32;;-1:-1:-1;3179:248:6:o;3432:385::-;3518:6;3526;3534;3542;3595:3;3583:9;3574:7;3570:23;3566:33;3563:53;;;3612:1;3609;3602:12;3563:53;-1:-1:-1;;3635:23:6;;;3705:2;3690:18;;3677:32;;-1:-1:-1;3756:2:6;3741:18;;3728:32;;3807:2;3792:18;3779:32;;-1:-1:-1;3432:385:6;-1:-1:-1;3432:385:6:o;3822:484::-;3875:3;3913:5;3907:12;3940:6;3935:3;3928:19;3966:4;3995:2;3990:3;3986:12;3979:19;;4032:2;4025:5;4021:14;4053:1;4063:218;4077:6;4074:1;4071:13;4063:218;;;4142:13;;-1:-1:-1;;;;;4138:62:6;4126:75;;4221:12;;;;4256:15;;;;4099:1;4092:9;4063:218;;;-1:-1:-1;4297:3:6;;3822:484;-1:-1:-1;;;;;3822:484:6:o;4311:804::-;4568:2;4557:9;4550:21;4531:4;4594:56;4646:2;4635:9;4631:18;4623:6;4594:56;:::i;:::-;4707:22;;;4669:2;4687:18;;;4680:50;;;;4779:13;;4801:22;;;4877:15;;;;4839;;;4910:1;4920:169;4934:6;4931:1;4928:13;4920:169;;;4995:13;;4983:26;;5064:15;;;;5029:12;;;;4956:1;4949:9;4920:169;;;-1:-1:-1;5106:3:6;;4311:804;-1:-1:-1;;;;;;;4311:804:6:o;5120:261::-;5299:2;5288:9;5281:21;5262:4;5319:56;5371:2;5360:9;5356:18;5348:6;5319:56;:::i;5386:260::-;5454:6;5462;5515:2;5503:9;5494:7;5490:23;5486:32;5483:52;;;5531:1;5528;5521:12;5483:52;5554:29;5573:9;5554:29;:::i;:::-;5544:39;;5602:38;5636:2;5625:9;5621:18;5602:38;:::i;:::-;5592:48;;5386:260;;;;;:::o;5651:380::-;5730:1;5726:12;;;;5773;;;5794:61;;5848:4;5840:6;5836:17;5826:27;;5794:61;5901:2;5893:6;5890:14;5870:18;5867:38;5864:161;;5947:10;5942:3;5938:20;5935:1;5928:31;5982:4;5979:1;5972:15;6010:4;6007:1;6000:15;5864:161;;5651:380;;;:::o;6375:127::-;6436:10;6431:3;6427:20;6424:1;6417:31;6467:4;6464:1;6457:15;6491:4;6488:1;6481:15;6507:168;6580:9;;;6611;;6628:15;;;6622:22;;6608:37;6598:71;;6649:18;;:::i;6680:217::-;6720:1;6746;6736:132;;6790:10;6785:3;6781:20;6778:1;6771:31;6825:4;6822:1;6815:15;6853:4;6850:1;6843:15;6736:132;-1:-1:-1;6882:9:6;;6680:217::o;6902:128::-;6969:9;;;6990:11;;;6987:37;;;7004:18;;:::i;7035:125::-;7100:9;;;7121:10;;;7118:36;;;7134:18;;:::i;7165:135::-;7204:3;7225:17;;;7222:43;;7245:18;;:::i;:::-;-1:-1:-1;7292:1:6;7281:13;;7165:135::o;9106:422::-;9195:1;9238:5;9195:1;9252:270;9273:7;9263:8;9260:21;9252:270;;;9332:4;9328:1;9324:6;9320:17;9314:4;9311:27;9308:53;;;9341:18;;:::i;:::-;9391:7;9381:8;9377:22;9374:55;;;9411:16;;;;9374:55;9490:22;;;;9450:15;;;;9252:270;;;9256:3;9106:422;;;;;:::o;9533:806::-;9582:5;9612:8;9602:80;;-1:-1:-1;9653:1:6;9667:5;;9602:80;9701:4;9691:76;;-1:-1:-1;9738:1:6;9752:5;;9691:76;9783:4;9801:1;9796:59;;;;9869:1;9864:130;;;;9776:218;;9796:59;9826:1;9817:10;;9840:5;;;9864:130;9901:3;9891:8;9888:17;9885:43;;;9908:18;;:::i;:::-;-1:-1:-1;;9964:1:6;9950:16;;9979:5;;9776:218;;10078:2;10068:8;10065:16;10059:3;10053:4;10050:13;10046:36;10040:2;10030:8;10027:16;10022:2;10016:4;10013:12;10009:35;10006:77;10003:159;;;-1:-1:-1;10115:19:6;;;10147:5;;10003:159;10194:34;10219:8;10213:4;10194:34;:::i;:::-;10264:6;10260:1;10256:6;10252:19;10243:7;10240:32;10237:58;;;10275:18;;:::i;:::-;10313:20;;9533:806;-1:-1:-1;;;9533:806:6:o;10344:131::-;10404:5;10433:36;10460:8;10454:4;10433:36;:::i;10480:127::-;10541:10;10536:3;10532:20;10529:1;10522:31;10572:4;10569:1;10562:15;10596:4;10593:1;10586:15;10612:127;10673:10;10668:3;10664:20;10661:1;10654:31;10704:4;10701:1;10694:15;10728:4;10725:1;10718:15"},"gasEstimates":{"creation":{"codeDepositCost":"1129200","executionCost":"infinite","totalCost":"infinite"},"external":{"addPool(uint256,uint256,uint256,uint256)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"24785","balanceOf(address)":"2585","checkClaimableRewards(uint256)":"infinite","checkPoolDetails(uint256)":"8938","checkRemainingCapacity(uint256)":"infinite","checkUserDepositInPool(uint256)":"infinite","checkUserDeposits(address)":"infinite","checkWhaleWallets()":"infinite","claimRewards(uint256)":"infinite","decimals()":"223","depositWei(uint256)":"infinite","name()":"infinite","owner()":"2404","symbol()":"infinite","totalSupply()":"2349","transfer(address,uint256)":"51289","transferFrom(address,address,uint256)":"infinite","withdrawWei(uint256,uint256)":"infinite"}},"methodIdentifiers":{"addPool(uint256,uint256,uint256,uint256)":"b7c7c4e0","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkClaimableRewards(uint256)":"e0ebf61a","checkPoolDetails(uint256)":"8fb0a9f4","checkRemainingCapacity(uint256)":"f3bc21b9","checkUserDepositInPool(uint256)":"c94c178b","checkUserDeposits(address)":"31d98237","checkWhaleWallets()":"ca593db0","claimRewards(uint256)":"0962ef79","decimals()":"313ce567","depositWei(uint256)":"a3f81da0","name()":"06fdde03","owner()":"8da5cb5b","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdrawWei(uint256,uint256)":"a8376b3c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yieldPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTime\",\"type\":\"uint256\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"checkClaimableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"checkPoolDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"checkRemainingCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"checkUserDepositInPool\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkUserDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkWhaleWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"depositWei\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawWei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YieldFarming.sol\":\"YieldFarming\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/YieldFarming.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract YieldFarming is ERC20 {\\r\\n    address public owner;\\r\\n    uint whaleThreshold = 10000 wei;\\r\\n    address[] whales;\\r\\n    mapping(address => bool) isWhale;\\r\\n\\r\\n    mapping(address => uint) balance;\\r\\n\\r\\n    uint pId;\\r\\n    struct PoolDeposit {\\r\\n        uint amount;\\r\\n        uint time;\\r\\n    }\\r\\n\\r\\n    struct Pool {\\r\\n        uint userCount;\\r\\n        uint maxAmount;\\r\\n        uint yeildPercent;\\r\\n        uint minDeposit;\\r\\n        uint rewardTime;\\r\\n        uint totalDeposit;\\r\\n        mapping(address => PoolDeposit) ledger;\\r\\n        mapping(uint => address) user;\\r\\n    }\\r\\n    mapping(uint => Pool) pools;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Only owner can call this function\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    // @dev allows the owner of the contract to add a new liquidity pool.The pool ID starts from 0\\r\\n    // @params maxAmount: The maximum amount in Wei that the pool can hold.\\r\\n    // @params yieldPercent: The percentage of rewards that will be given out per unit of time.\\r\\n    // @params minDeposit: The minimum amount of Wei that must be deposited into the pool.\\r\\n    // @params rewardTime: The time interval in seconds at which rewards are provided.\\r\\n    //  After every rewardTime, the user will receive their share of rewards.\\r\\n    function addPool(uint maxAmount, uint yieldPercent, uint minDeposit, uint rewardTime) public onlyOwner {\\r\\n        require(minDeposit < maxAmount, \\\"min should be less than max\\\");\\r\\n\\r\\n        // Mint 100 tokens to msg.sender\\r\\n        // Similar to how\\r\\n        // 1 dollar = 100 cents\\r\\n        // 1 token = 1 * (10 ** decimals)\\r\\n        _mint(msg.sender, maxAmount * 10 ** uint256(2));\\r\\n\\r\\n        pools[pId].maxAmount = maxAmount;\\r\\n        pools[pId].yeildPercent = yieldPercent;\\r\\n        pools[pId].minDeposit = minDeposit;\\r\\n        pools[pId].rewardTime = rewardTime;\\r\\n        pools[pId].totalDeposit = 0;\\r\\n\\r\\n        pId++;\\r\\n    }\\r\\n\\r\\n    // @dev Allows anyone to deposit Wei into a specific liquidity pool.\\r\\n    //      The function checks if the yield farming is active,\\r\\n    //      the amount sent is greater than the minimum deposit amount,\\r\\n    //      and the pool exists. No user is allowed to deposit twice in the same pool.\\r\\n    function depositWei(uint poolId) public payable {\\r\\n        require(pools[poolId].minDeposit < msg.value, \\\"Insufficient Deposit\\\");\\r\\n        require(pools[poolId].maxAmount >= msg.value + pools[poolId].totalDeposit, \\\"max limit exceeded\\\");\\r\\n\\r\\n        pools[poolId].totalDeposit += msg.value;\\r\\n\\r\\n        balance[msg.sender] += msg.value;\\r\\n\\r\\n        pools[poolId].ledger[msg.sender].amount = msg.value;\\r\\n        pools[poolId].ledger[msg.sender].time = block.timestamp;\\r\\n\\r\\n        uint userCount = pools[poolId].userCount;\\r\\n        pools[poolId].user[userCount] = msg.sender;\\r\\n        pools[poolId].userCount += 1;\\r\\n\\r\\n        if (balance[msg.sender] > whaleThreshold) {\\r\\n            isWhale[msg.sender] = true;\\r\\n            whales.push(msg.sender);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // @dev Enables a user to withdraw a specified amount of Wei they have deposited.\\r\\n    //      If the user withdraws all of their deposited Wei,\\r\\n    //      their unclaimed rewards are reset to zero.\\r\\n    function withdrawWei(uint poolId, uint amount) public { \\r\\n       require(pools[poolId].ledger[msg.sender].amount > 0, \\\"insufficient funds\\\");\\r\\n\\r\\n        pools[poolId].ledger[msg.sender].amount -= amount;\\r\\n        pools[poolId].totalDeposit -= amount;\\r\\n        balance[msg.sender] -= amount;\\r\\n\\r\\n        if (pools[poolId].ledger[msg.sender].amount == 0) {\\r\\n             pools[poolId].ledger[msg.sender].time = block.timestamp;\\r\\n        }\\r\\n\\r\\n        payable(msg.sender).transfer(amount);\\r\\n    }\\r\\n\\r\\n    // @dev Allows a user to claim their rewards.\\r\\n    //      The rewards are proportional to the amount of time and the amount of Wei that the user has deposited.\\r\\n    //      For example, if the yield percent is 2%, reward time is 10 seconds and a user who deposited 100 Wei\\r\\n    //      and waited for 30 seconds would receive 6 tokens. This function can only be called if the claimable\\r\\n    //      reward is greater than 0.\\r\\n    function claimRewards(uint poolId) public {\\r\\n        uint rewards = checkClaimableRewards(poolId);\\r\\n        require(rewards > 0, \\\"no rewards\\\");\\r\\n\\r\\n        if (isWhale[msg.sender]) {\\r\\n            rewards = (rewards * 120) / 100;\\r\\n        }\\r\\n\\r\\n        pools[poolId].ledger[msg.sender].time = block.timestamp;\\r\\n        _update(owner, msg.sender, rewards);\\r\\n    }\\r\\n\\r\\n    // @dev Returns the details of the specified pool including the\\r\\n    // maximum amount, yield percentage, minimum deposit, and reward providing time.\\r\\n    function checkPoolDetails(uint poolId) public view returns (uint, uint, uint, uint) {\\r\\n        return (\\r\\n            pools[poolId].maxAmount,\\r\\n            pools[poolId].yeildPercent,\\r\\n            pools[poolId].minDeposit,\\r\\n            pools[poolId].rewardTime\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // @dev Returns the total amount of Wei that the user has deposited in all pools and the total claimable rewards\\r\\n    function checkUserDeposits(address user) public view returns (uint, uint) {\\r\\n        uint rewards = 0;\\r\\n\\r\\n        for(uint i = 0; i < pId; i++) {\\r\\n            uint timeElapsed = block.timestamp - pools[i].ledger[user].time;\\r\\n\\r\\n            uint rewardTime = timeElapsed / pools[i].rewardTime;\\r\\n\\r\\n            uint rewardPercentage = pools[i].yeildPercent * rewardTime;\\r\\n\\r\\n            uint reward = (pools[i].ledger[user].amount * rewardPercentage) / 100;\\r\\n\\r\\n            rewards += reward;\\r\\n        }\\r\\n\\r\\n        return (balance[user], rewards);\\r\\n    }\\r\\n\\r\\n    // @dev  Returns two arrays - the list of addresses that have deposited in the specified pool, and the amount they have deposited.\\r\\n    function checkUserDepositInPool(uint poolId) public view returns (address[] memory, uint[] memory) {\\r\\n        uint userCount = pools[poolId].userCount;\\r\\n        address[] memory users = new address[](userCount);\\r\\n        uint[] memory deposits = new uint[](userCount);\\r\\n\\r\\n        for(uint i = 0; i < userCount; i++) {\\r\\n            address user = pools[poolId].user[i];\\r\\n            users[i] = user;\\r\\n\\r\\n            uint deposit = pools[poolId].ledger[user].amount;\\r\\n            deposits[i] = deposit;\\r\\n        }\\r\\n\\r\\n        return (users, deposits);\\r\\n    }\\r\\n\\r\\n    // @dev Returns the number of tokens that a depositor will receive after the reward time has passed for the specified pool.\\r\\n    //      For example, if the yield rate is 2% ,reward time is 10 seconds, a user who deposited 100 Wei and waited for 30 seconds\\r\\n    //      would receive 6 tokens.\\r\\n    function checkClaimableRewards(uint poolId) public view returns (uint) {\\r\\n        uint timeElapsed = block.timestamp - pools[poolId].ledger[msg.sender].time;\\r\\n\\r\\n        uint rewardTime = timeElapsed / pools[poolId].rewardTime;\\r\\n\\r\\n        uint rewardPercentage = pools[poolId].yeildPercent * rewardTime;\\r\\n\\r\\n        uint reward = (pools[poolId].ledger[msg.sender].amount * rewardPercentage) / 100;\\r\\n\\r\\n        return reward;\\r\\n    }\\r\\n\\r\\n    // @dev Returns the remaining capacity of the specified pool in Wei.\\r\\n    function checkRemainingCapacity(uint poolId) public view returns (uint) {\\r\\n        return pools[poolId].maxAmount - pools[poolId].totalDeposit;\\r\\n    }\\r\\n\\r\\n    // @dev Return an array of addresses that are considered \\\"whale\\\" wallets.\\r\\n    function checkWhaleWallets() public view returns (address[] memory) {\\r\\n        return whales;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x873f3cee1b3f36bc6267d57eda764efd6fcf6edf98d10c2e6356ea292d78b2e3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":792,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"owner","offset":0,"slot":"5","type":"t_address"},{"astId":795,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"whaleThreshold","offset":0,"slot":"6","type":"t_uint256"},{"astId":798,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"whales","offset":0,"slot":"7","type":"t_array(t_address)dyn_storage"},{"astId":802,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"isWhale","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"},{"astId":806,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"balance","offset":0,"slot":"9","type":"t_mapping(t_address,t_uint256)"},{"astId":808,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"pId","offset":0,"slot":"10","type":"t_uint256"},{"astId":840,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"pools","offset":0,"slot":"11","type":"t_mapping(t_uint256,t_struct(Pool)835_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(PoolDeposit)813_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct YieldFarming.PoolDeposit)","numberOfBytes":"32","value":"t_struct(PoolDeposit)813_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_struct(Pool)835_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct YieldFarming.Pool)","numberOfBytes":"32","value":"t_struct(Pool)835_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Pool)835_storage":{"encoding":"inplace","label":"struct YieldFarming.Pool","members":[{"astId":815,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"userCount","offset":0,"slot":"0","type":"t_uint256"},{"astId":817,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"maxAmount","offset":0,"slot":"1","type":"t_uint256"},{"astId":819,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"yeildPercent","offset":0,"slot":"2","type":"t_uint256"},{"astId":821,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"minDeposit","offset":0,"slot":"3","type":"t_uint256"},{"astId":823,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"rewardTime","offset":0,"slot":"4","type":"t_uint256"},{"astId":825,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"totalDeposit","offset":0,"slot":"5","type":"t_uint256"},{"astId":830,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"ledger","offset":0,"slot":"6","type":"t_mapping(t_address,t_struct(PoolDeposit)813_storage)"},{"astId":834,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"user","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_address)"}],"numberOfBytes":"256"},"t_struct(PoolDeposit)813_storage":{"encoding":"inplace","label":"struct YieldFarming.PoolDeposit","members":[{"astId":810,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"amount","offset":0,"slot":"0","type":"t_uint256"},{"astId":812,"contract":"contracts/YieldFarming.sol:YieldFarming","label":"time","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}